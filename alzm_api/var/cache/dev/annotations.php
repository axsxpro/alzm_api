<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23setContainer' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23setContainer' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23getParameter' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23getParameter' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23getSubscribedServices' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23getSubscribedServices' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23has' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23has' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23get' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23get' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23generateUrl' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23generateUrl' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23forward' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23forward' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23redirect' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23redirect' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23redirectToRoute' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23redirectToRoute' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23json' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23json' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23file' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23file' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23addFlash' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23addFlash' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23isGranted' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23isGranted' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23denyAccessUnlessGranted' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23denyAccessUnlessGranted' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23renderView' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23renderView' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23render' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23render' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23renderForm' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23renderForm' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23stream' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23stream' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23createNotFoundException' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23createNotFoundException' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23createAccessDeniedException' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23createAccessDeniedException' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23createForm' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23createForm' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23createFormBuilder' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23createFormBuilder' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23getDoctrine' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23getDoctrine' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23getUser' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23getUser' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23isCsrfTokenValid' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23isCsrfTokenValid' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23dispatchMessage' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23dispatchMessage' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23addLink' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23addLink' => 1,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%24container' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%24container' => 1,
'App%5CController%5CAdminController' => 0,
'[C]App%5CController%5CAdminController' => 1,
'App%5CController%5CAdminController%23allAdmin' => 2,
'[C]App%5CController%5CAdminController%23allAdmin' => 1,
'App%5CController%5CAdminController%23updateAdmin' => 3,
'[C]App%5CController%5CAdminController%23updateAdmin' => 1,
'App%5CController%5CAdminController%23deleteAdmin' => 4,
'[C]App%5CController%5CAdminController%23deleteAdmin' => 1,
'App%5CController%5CAdvantagesController' => 0,
'[C]App%5CController%5CAdvantagesController' => 1,
'App%5CController%5CAdvantagesController%23getAdvantages' => 5,
'[C]App%5CController%5CAdvantagesController%23getAdvantages' => 1,
'App%5CController%5CAdvantagesController%23getAdvantagebyId' => 5,
'[C]App%5CController%5CAdvantagesController%23getAdvantagebyId' => 1,
'App%5CController%5CAdvantagesController%23createAdvantages' => 6,
'[C]App%5CController%5CAdvantagesController%23createAdvantages' => 1,
'App%5CController%5CAdvantagesController%23updateAdvantages' => 7,
'[C]App%5CController%5CAdvantagesController%23updateAdvantages' => 1,
'App%5CController%5CAdvantagesController%23deleteAdvantages' => 8,
'[C]App%5CController%5CAdvantagesController%23deleteAdvantages' => 1,
'App%5CController%5CAppointmentController' => 0,
'[C]App%5CController%5CAppointmentController' => 1,
'App%5CController%5CAppointmentController%23getAppointments' => 9,
'[C]App%5CController%5CAppointmentController%23getAppointments' => 1,
'App%5CController%5CAppointmentController%23getAppointmentByCoachId' => 9,
'[C]App%5CController%5CAppointmentController%23getAppointmentByCoachId' => 1,
'App%5CController%5CAppointmentController%23createAppointment' => 10,
'[C]App%5CController%5CAppointmentController%23createAppointment' => 1,
'App%5CController%5CAppointmentController%23updateAppointment' => 11,
'[C]App%5CController%5CAppointmentController%23updateAppointment' => 1,
'App%5CController%5CAppointmentController%23deleteAppointments' => 12,
'[C]App%5CController%5CAppointmentController%23deleteAppointments' => 1,
'App%5CController%5CAppointmentController%23deleteAppointment' => 12,
'[C]App%5CController%5CAppointmentController%23deleteAppointment' => 1,
'App%5CController%5CAvailabilityController' => 0,
'[C]App%5CController%5CAvailabilityController' => 1,
'App%5CController%5CAvailabilityController%23getAvailabilities' => 13,
'[C]App%5CController%5CAvailabilityController%23getAvailabilities' => 1,
'App%5CController%5CAvailabilityController%23getAvailabilitiesByCoachId' => 13,
'[C]App%5CController%5CAvailabilityController%23getAvailabilitiesByCoachId' => 1,
'App%5CController%5CAvailabilityController%23createAvailabilities' => 14,
'[C]App%5CController%5CAvailabilityController%23createAvailabilities' => 1,
'App%5CController%5CAvailabilityController%23updateAvailabilities' => 15,
'[C]App%5CController%5CAvailabilityController%23updateAvailabilities' => 1,
'App%5CController%5CAvailabilityController%23deleteAvailabilities' => 16,
'[C]App%5CController%5CAvailabilityController%23deleteAvailabilities' => 1,
'App%5CController%5CAvailabilityController%23deleteAvailabilityById' => 16,
'[C]App%5CController%5CAvailabilityController%23deleteAvailabilityById' => 1,
'App%5CController%5CCoachController' => 0,
'[C]App%5CController%5CCoachController' => 1,
'App%5CController%5CCoachController%23getCoachs' => 17,
'[C]App%5CController%5CCoachController%23getCoachs' => 1,
'App%5CController%5CCoachController%23getCoachById' => 17,
'[C]App%5CController%5CCoachController%23getCoachById' => 1,
'App%5CController%5CCoachController%23deleteCoach' => 18,
'[C]App%5CController%5CCoachController%23deleteCoach' => 1,
'App%5CController%5CCourseController' => 0,
'[C]App%5CController%5CCourseController' => 1,
'App%5CController%5CCourseController%23getCourses' => 19,
'[C]App%5CController%5CCourseController%23getCourses' => 1,
'App%5CController%5CCourseController%23getCoursesbyId' => 19,
'[C]App%5CController%5CCourseController%23getCoursesbyId' => 1,
'App%5CController%5CCourseController%23createCourses' => 20,
'[C]App%5CController%5CCourseController%23createCourses' => 1,
'App%5CController%5CCourseController%23updateCourses' => 21,
'[C]App%5CController%5CCourseController%23updateCourses' => 1,
'App%5CController%5CCourseController%23deleteCourses' => 22,
'[C]App%5CController%5CCourseController%23deleteCourses' => 1,
'App%5CController%5CHomePageController' => 0,
'[C]App%5CController%5CHomePageController' => 1,
'App%5CController%5CHomePageController%23index' => 0,
'[C]App%5CController%5CHomePageController%23index' => 1,
'App%5CController%5CPatientController' => 0,
'[C]App%5CController%5CPatientController' => 1,
'App%5CController%5CPatientController%23getPatients' => 23,
'[C]App%5CController%5CPatientController%23getPatients' => 1,
'App%5CController%5CPatientController%23getPatientById' => 23,
'[C]App%5CController%5CPatientController%23getPatientById' => 1,
'App%5CController%5CPatientController%23deletePatient' => 24,
'[C]App%5CController%5CPatientController%23deletePatient' => 1,
'App%5CController%5CPlanController' => 0,
'[C]App%5CController%5CPlanController' => 1,
'App%5CController%5CPlanController%23getPlans' => 25,
'[C]App%5CController%5CPlanController%23getPlans' => 1,
'App%5CController%5CPlanController%23getPlanById' => 26,
'[C]App%5CController%5CPlanController%23getPlanById' => 1,
'App%5CController%5CPlanController%23createPlans' => 27,
'[C]App%5CController%5CPlanController%23createPlans' => 1,
'App%5CController%5CPlanController%23updatePlans' => 28,
'[C]App%5CController%5CPlanController%23updatePlans' => 1,
'App%5CController%5CPlanController%23deleteCourses' => 29,
'[C]App%5CController%5CPlanController%23deleteCourses' => 1,
'App%5CController%5CPlanningRulesController' => 0,
'[C]App%5CController%5CPlanningRulesController' => 1,
'App%5CController%5CPlanningRulesController%23getPlanningsRules' => 30,
'[C]App%5CController%5CPlanningRulesController%23getPlanningsRules' => 1,
'App%5CController%5CPlanningRulesController%23getPlanningById' => 30,
'[C]App%5CController%5CPlanningRulesController%23getPlanningById' => 1,
'App%5CController%5CPlanningRulesController%23createPlannings' => 31,
'[C]App%5CController%5CPlanningRulesController%23createPlannings' => 1,
'App%5CController%5CPlanningRulesController%23updatePlannings' => 32,
'[C]App%5CController%5CPlanningRulesController%23updatePlannings' => 1,
'App%5CController%5CPlanningRulesController%23deletePlannings' => 33,
'[C]App%5CController%5CPlanningRulesController%23deletePlannings' => 1,
'App%5CController%5CScheduleController' => 0,
'[C]App%5CController%5CScheduleController' => 1,
'App%5CController%5CScheduleController%23getSchedules' => 34,
'[C]App%5CController%5CScheduleController%23getSchedules' => 1,
'App%5CController%5CScheduleController%23getScheduleById' => 35,
'[C]App%5CController%5CScheduleController%23getScheduleById' => 1,
'App%5CController%5CScheduleController%23createSchedules' => 36,
'[C]App%5CController%5CScheduleController%23createSchedules' => 1,
'App%5CController%5CScheduleController%23updateSchedules' => 37,
'[C]App%5CController%5CScheduleController%23updateSchedules' => 1,
'App%5CController%5CScheduleController%23deleteSchedules' => 38,
'[C]App%5CController%5CScheduleController%23deleteSchedules' => 1,
'App%5CController%5CTransactionController' => 0,
'[C]App%5CController%5CTransactionController' => 1,
'App%5CController%5CTransactionController%23getTransactions' => 39,
'[C]App%5CController%5CTransactionController%23getTransactions' => 1,
'App%5CController%5CUsersController' => 0,
'[C]App%5CController%5CUsersController' => 1,
'App%5CController%5CUsersController%23getUsers' => 40,
'[C]App%5CController%5CUsersController%23getUsers' => 1,
'App%5CController%5CUsersController%23getUserById' => 40,
'[C]App%5CController%5CUsersController%23getUserById' => 1,
'App%5CController%5CUsersController%23getRoleById' => 40,
'[C]App%5CController%5CUsersController%23getRoleById' => 1,
'App%5CController%5CUsersController%23createUsers' => 41,
'[C]App%5CController%5CUsersController%23createUsers' => 1,
'App%5CController%5CUsersController%23updateUsers' => 42,
'[C]App%5CController%5CUsersController%23updateUsers' => 1,
'App%5CController%5CUsersController%23deleteUser' => 43,
'[C]App%5CController%5CUsersController%23deleteUser' => 1,
'App%5CController%5CUsersController%23deleteCoach' => 0,
'[C]App%5CController%5CUsersController%23deleteCoach' => 1,
'App%5CController%5CUsersController%23deletePatient' => 0,
'[C]App%5CController%5CUsersController%23deletePatient' => 1,
'App%5CEntity%5CAdmin' => 44,
'[C]App%5CEntity%5CAdmin' => 1,
'App%5CEntity%5CAdmin%23getIdUser' => 0,
'[C]App%5CEntity%5CAdmin%23getIdUser' => 1,
'App%5CEntity%5CAdmin%23setIdUser' => 0,
'[C]App%5CEntity%5CAdmin%23setIdUser' => 1,
'App%5CEntity%5CAdmin%24idUser' => 45,
'[C]App%5CEntity%5CAdmin%24idUser' => 1,
'App%5CEntity%5CAdvantage' => 46,
'[C]App%5CEntity%5CAdvantage' => 1,
'App%5CEntity%5CAdvantage%23__construct' => 0,
'[C]App%5CEntity%5CAdvantage%23__construct' => 1,
'App%5CEntity%5CAdvantage%23getIdAdvantage' => 0,
'[C]App%5CEntity%5CAdvantage%23getIdAdvantage' => 1,
'App%5CEntity%5CAdvantage%23getDescription' => 0,
'[C]App%5CEntity%5CAdvantage%23getDescription' => 1,
'App%5CEntity%5CAdvantage%23setDescription' => 0,
'[C]App%5CEntity%5CAdvantage%23setDescription' => 1,
'App%5CEntity%5CAdvantage%23getIdPlan' => 0,
'[C]App%5CEntity%5CAdvantage%23getIdPlan' => 1,
'App%5CEntity%5CAdvantage%23addIdPlan' => 0,
'[C]App%5CEntity%5CAdvantage%23addIdPlan' => 1,
'App%5CEntity%5CAdvantage%23removeIdPlan' => 0,
'[C]App%5CEntity%5CAdvantage%23removeIdPlan' => 1,
'App%5CEntity%5CAdvantage%24idAdvantage' => 47,
'[C]App%5CEntity%5CAdvantage%24idAdvantage' => 1,
'App%5CEntity%5CAdvantage%24description' => 48,
'[C]App%5CEntity%5CAdvantage%24description' => 1,
'App%5CEntity%5CAdvantage%24idPlan' => 49,
'[C]App%5CEntity%5CAdvantage%24idPlan' => 50,
'App%5CEntity%5CAppUser' => 51,
'[C]App%5CEntity%5CAppUser' => 50,
'App%5CEntity%5CAppUser%23getIdUser' => 0,
'[C]App%5CEntity%5CAppUser%23getIdUser' => 50,
'App%5CEntity%5CAppUser%23getLastname' => 0,
'[C]App%5CEntity%5CAppUser%23getLastname' => 50,
'App%5CEntity%5CAppUser%23setLastname' => 0,
'[C]App%5CEntity%5CAppUser%23setLastname' => 50,
'App%5CEntity%5CAppUser%23getFirstname' => 0,
'[C]App%5CEntity%5CAppUser%23getFirstname' => 50,
'App%5CEntity%5CAppUser%23setFirstname' => 0,
'[C]App%5CEntity%5CAppUser%23setFirstname' => 50,
'App%5CEntity%5CAppUser%23getDatebirth' => 0,
'[C]App%5CEntity%5CAppUser%23getDatebirth' => 50,
'App%5CEntity%5CAppUser%23setDatebirth' => 0,
'[C]App%5CEntity%5CAppUser%23setDatebirth' => 50,
'App%5CEntity%5CAppUser%23getEmail' => 0,
'[C]App%5CEntity%5CAppUser%23getEmail' => 50,
'App%5CEntity%5CAppUser%23setEmail' => 0,
'[C]App%5CEntity%5CAppUser%23setEmail' => 50,
'App%5CEntity%5CAppUser%23getAccessToken' => 0,
'[C]App%5CEntity%5CAppUser%23getAccessToken' => 50,
'App%5CEntity%5CAppUser%23setAccessToken' => 0,
'[C]App%5CEntity%5CAppUser%23setAccessToken' => 50,
'App%5CEntity%5CAppUser%23getDateRegistration' => 0,
'[C]App%5CEntity%5CAppUser%23getDateRegistration' => 50,
'App%5CEntity%5CAppUser%23setDateRegistration' => 0,
'[C]App%5CEntity%5CAppUser%23setDateRegistration' => 50,
'App%5CEntity%5CAppUser%23getUserIdentifier' => 0,
'[C]App%5CEntity%5CAppUser%23getUserIdentifier' => 50,
'App%5CEntity%5CAppUser%23getUsername' => 0,
'[C]App%5CEntity%5CAppUser%23getUsername' => 50,
'App%5CEntity%5CAppUser%23getRoles' => 0,
'[C]App%5CEntity%5CAppUser%23getRoles' => 50,
'App%5CEntity%5CAppUser%23setRoles' => 0,
'[C]App%5CEntity%5CAppUser%23setRoles' => 50,
'App%5CEntity%5CAppUser%23getPassword' => 0,
'[C]App%5CEntity%5CAppUser%23getPassword' => 50,
'App%5CEntity%5CAppUser%23setPassword' => 0,
'[C]App%5CEntity%5CAppUser%23setPassword' => 50,
'App%5CEntity%5CAppUser%23getSalt' => 0,
'[C]App%5CEntity%5CAppUser%23getSalt' => 50,
'App%5CEntity%5CAppUser%23eraseCredentials' => 0,
'[C]App%5CEntity%5CAppUser%23eraseCredentials' => 50,
'App%5CEntity%5CAppUser%24idUser' => 52,
'[C]App%5CEntity%5CAppUser%24idUser' => 50,
'App%5CEntity%5CAppUser%24lastname' => 53,
'[C]App%5CEntity%5CAppUser%24lastname' => 50,
'App%5CEntity%5CAppUser%24firstname' => 54,
'[C]App%5CEntity%5CAppUser%24firstname' => 50,
'App%5CEntity%5CAppUser%24datebirth' => 55,
'[C]App%5CEntity%5CAppUser%24datebirth' => 50,
'App%5CEntity%5CAppUser%24email' => 56,
'[C]App%5CEntity%5CAppUser%24email' => 50,
'App%5CEntity%5CAppUser%24password' => 57,
'[C]App%5CEntity%5CAppUser%24password' => 50,
'App%5CEntity%5CAppUser%24accessToken' => 58,
'[C]App%5CEntity%5CAppUser%24accessToken' => 50,
'App%5CEntity%5CAppUser%24dateRegistration' => 59,
'[C]App%5CEntity%5CAppUser%24dateRegistration' => 50,
'App%5CEntity%5CAppUser%24roles' => 60,
'[C]App%5CEntity%5CAppUser%24roles' => 50,
'App%5CEntity%5CAppointment' => 61,
'[C]App%5CEntity%5CAppointment' => 50,
'App%5CEntity%5CAppointment%23getIdAppointment' => 0,
'[C]App%5CEntity%5CAppointment%23getIdAppointment' => 50,
'App%5CEntity%5CAppointment%23getIdCoach' => 0,
'[C]App%5CEntity%5CAppointment%23getIdCoach' => 50,
'App%5CEntity%5CAppointment%23setIdCoach' => 0,
'[C]App%5CEntity%5CAppointment%23setIdCoach' => 50,
'App%5CEntity%5CAppointment%23getIdPatient' => 0,
'[C]App%5CEntity%5CAppointment%23getIdPatient' => 50,
'App%5CEntity%5CAppointment%23setIdPatient' => 0,
'[C]App%5CEntity%5CAppointment%23setIdPatient' => 50,
'App%5CEntity%5CAppointment%23getIdSchedule' => 0,
'[C]App%5CEntity%5CAppointment%23getIdSchedule' => 50,
'App%5CEntity%5CAppointment%23setIdSchedule' => 0,
'[C]App%5CEntity%5CAppointment%23setIdSchedule' => 50,
'App%5CEntity%5CAppointment%24idAppointment' => 62,
'[C]App%5CEntity%5CAppointment%24idAppointment' => 50,
'App%5CEntity%5CAppointment%24idCoach' => 63,
'[C]App%5CEntity%5CAppointment%24idCoach' => 50,
'App%5CEntity%5CAppointment%24idPatient' => 64,
'[C]App%5CEntity%5CAppointment%24idPatient' => 50,
'App%5CEntity%5CAppointment%24idSchedule' => 65,
'[C]App%5CEntity%5CAppointment%24idSchedule' => 50,
'App%5CEntity%5CAvailability' => 66,
'[C]App%5CEntity%5CAvailability' => 50,
'App%5CEntity%5CAvailability%23getIdAvailability' => 0,
'[C]App%5CEntity%5CAvailability%23getIdAvailability' => 50,
'App%5CEntity%5CAvailability%23getDateAvailability' => 0,
'[C]App%5CEntity%5CAvailability%23getDateAvailability' => 50,
'App%5CEntity%5CAvailability%23setDateAvailability' => 0,
'[C]App%5CEntity%5CAvailability%23setDateAvailability' => 50,
'App%5CEntity%5CAvailability%23getHourStartSlot' => 0,
'[C]App%5CEntity%5CAvailability%23getHourStartSlot' => 50,
'App%5CEntity%5CAvailability%23setHourStartSlot' => 0,
'[C]App%5CEntity%5CAvailability%23setHourStartSlot' => 50,
'App%5CEntity%5CAvailability%23getHourEndSlot' => 0,
'[C]App%5CEntity%5CAvailability%23getHourEndSlot' => 50,
'App%5CEntity%5CAvailability%23setHourEndSlot' => 0,
'[C]App%5CEntity%5CAvailability%23setHourEndSlot' => 50,
'App%5CEntity%5CAvailability%23getIdUser' => 0,
'[C]App%5CEntity%5CAvailability%23getIdUser' => 50,
'App%5CEntity%5CAvailability%23setIdUser' => 0,
'[C]App%5CEntity%5CAvailability%23setIdUser' => 50,
'App%5CEntity%5CAvailability%24idAvailability' => 67,
'[C]App%5CEntity%5CAvailability%24idAvailability' => 50,
'App%5CEntity%5CAvailability%24dateAvailability' => 68,
'[C]App%5CEntity%5CAvailability%24dateAvailability' => 50,
'App%5CEntity%5CAvailability%24hourStartSlot' => 69,
'[C]App%5CEntity%5CAvailability%24hourStartSlot' => 50,
'App%5CEntity%5CAvailability%24hourEndSlot' => 70,
'[C]App%5CEntity%5CAvailability%24hourEndSlot' => 50,
'App%5CEntity%5CAvailability%24idUser' => 71,
'[C]App%5CEntity%5CAvailability%24idUser' => 50,
'App%5CEntity%5CCoach' => 72,
'[C]App%5CEntity%5CCoach' => 50,
'App%5CEntity%5CCoach%23__construct' => 0,
'[C]App%5CEntity%5CCoach%23__construct' => 50,
'App%5CEntity%5CCoach%23isIsconfirmed' => 0,
'[C]App%5CEntity%5CCoach%23isIsconfirmed' => 50,
'App%5CEntity%5CCoach%23setIsconfirmed' => 0,
'[C]App%5CEntity%5CCoach%23setIsconfirmed' => 50,
'App%5CEntity%5CCoach%23getHourlyRate' => 0,
'[C]App%5CEntity%5CCoach%23getHourlyRate' => 50,
'App%5CEntity%5CCoach%23setHourlyRate' => 0,
'[C]App%5CEntity%5CCoach%23setHourlyRate' => 50,
'App%5CEntity%5CCoach%23getIdUser' => 0,
'[C]App%5CEntity%5CCoach%23getIdUser' => 50,
'App%5CEntity%5CCoach%23setIdUser' => 0,
'[C]App%5CEntity%5CCoach%23setIdUser' => 50,
'App%5CEntity%5CCoach%23getIdCourse' => 0,
'[C]App%5CEntity%5CCoach%23getIdCourse' => 50,
'App%5CEntity%5CCoach%23addIdCourse' => 0,
'[C]App%5CEntity%5CCoach%23addIdCourse' => 50,
'App%5CEntity%5CCoach%23removeIdCourse' => 0,
'[C]App%5CEntity%5CCoach%23removeIdCourse' => 50,
'App%5CEntity%5CCoach%24idUser' => 73,
'[C]App%5CEntity%5CCoach%24idUser' => 50,
'App%5CEntity%5CCoach%24isconfirmed' => 74,
'[C]App%5CEntity%5CCoach%24isconfirmed' => 50,
'App%5CEntity%5CCoach%24hourlyRate' => 75,
'[C]App%5CEntity%5CCoach%24hourlyRate' => 50,
'App%5CEntity%5CCoach%24idCourse' => 76,
'[C]App%5CEntity%5CCoach%24idCourse' => 50,
'App%5CEntity%5CCourse' => 77,
'[C]App%5CEntity%5CCourse' => 50,
'App%5CEntity%5CCourse%23__construct' => 0,
'[C]App%5CEntity%5CCourse%23__construct' => 50,
'App%5CEntity%5CCourse%23getIdCourse' => 0,
'[C]App%5CEntity%5CCourse%23getIdCourse' => 50,
'App%5CEntity%5CCourse%23getName' => 0,
'[C]App%5CEntity%5CCourse%23getName' => 50,
'App%5CEntity%5CCourse%23setName' => 0,
'[C]App%5CEntity%5CCourse%23setName' => 50,
'App%5CEntity%5CCourse%23getDescription' => 0,
'[C]App%5CEntity%5CCourse%23getDescription' => 50,
'App%5CEntity%5CCourse%23setDescription' => 0,
'[C]App%5CEntity%5CCourse%23setDescription' => 50,
'App%5CEntity%5CCourse%23getDuration' => 0,
'[C]App%5CEntity%5CCourse%23getDuration' => 50,
'App%5CEntity%5CCourse%23setDuration' => 0,
'[C]App%5CEntity%5CCourse%23setDuration' => 50,
'App%5CEntity%5CCourse%23getCost' => 0,
'[C]App%5CEntity%5CCourse%23getCost' => 50,
'App%5CEntity%5CCourse%23setCost' => 0,
'[C]App%5CEntity%5CCourse%23setCost' => 50,
'App%5CEntity%5CCourse%23getIdUser' => 0,
'[C]App%5CEntity%5CCourse%23getIdUser' => 50,
'App%5CEntity%5CCourse%23addIdUser' => 0,
'[C]App%5CEntity%5CCourse%23addIdUser' => 50,
'App%5CEntity%5CCourse%23removeIdUser' => 0,
'[C]App%5CEntity%5CCourse%23removeIdUser' => 50,
'App%5CEntity%5CCourse%24idCourse' => 78,
'[C]App%5CEntity%5CCourse%24idCourse' => 50,
'App%5CEntity%5CCourse%24name' => 79,
'[C]App%5CEntity%5CCourse%24name' => 50,
'App%5CEntity%5CCourse%24description' => 80,
'[C]App%5CEntity%5CCourse%24description' => 50,
'App%5CEntity%5CCourse%24duration' => 81,
'[C]App%5CEntity%5CCourse%24duration' => 50,
'App%5CEntity%5CCourse%24cost' => 82,
'[C]App%5CEntity%5CCourse%24cost' => 50,
'App%5CEntity%5CCourse%24idUser' => 83,
'[C]App%5CEntity%5CCourse%24idUser' => 50,
'App%5CEntity%5CFiles' => 84,
'[C]App%5CEntity%5CFiles' => 50,
'App%5CEntity%5CFiles%23__construct' => 0,
'[C]App%5CEntity%5CFiles%23__construct' => 50,
'App%5CEntity%5CFiles%23getIdFiles' => 0,
'[C]App%5CEntity%5CFiles%23getIdFiles' => 50,
'App%5CEntity%5CFiles%23getLink' => 0,
'[C]App%5CEntity%5CFiles%23getLink' => 50,
'App%5CEntity%5CFiles%23setLink' => 0,
'[C]App%5CEntity%5CFiles%23setLink' => 50,
'App%5CEntity%5CFiles%23getType' => 0,
'[C]App%5CEntity%5CFiles%23getType' => 50,
'App%5CEntity%5CFiles%23setType' => 0,
'[C]App%5CEntity%5CFiles%23setType' => 50,
'App%5CEntity%5CFiles%23getIdResources' => 0,
'[C]App%5CEntity%5CFiles%23getIdResources' => 50,
'App%5CEntity%5CFiles%23addIdResource' => 0,
'[C]App%5CEntity%5CFiles%23addIdResource' => 50,
'App%5CEntity%5CFiles%23removeIdResource' => 0,
'[C]App%5CEntity%5CFiles%23removeIdResource' => 50,
'App%5CEntity%5CFiles%24idFiles' => 85,
'[C]App%5CEntity%5CFiles%24idFiles' => 50,
'App%5CEntity%5CFiles%24link' => 86,
'[C]App%5CEntity%5CFiles%24link' => 50,
'App%5CEntity%5CFiles%24type' => 87,
'[C]App%5CEntity%5CFiles%24type' => 50,
'App%5CEntity%5CFiles%24idResources' => 88,
'[C]App%5CEntity%5CFiles%24idResources' => 50,
'App%5CEntity%5CPatient' => 89,
'[C]App%5CEntity%5CPatient' => 50,
'App%5CEntity%5CPatient%23__construct' => 0,
'[C]App%5CEntity%5CPatient%23__construct' => 50,
'App%5CEntity%5CPatient%23getSold' => 0,
'[C]App%5CEntity%5CPatient%23getSold' => 50,
'App%5CEntity%5CPatient%23setSold' => 0,
'[C]App%5CEntity%5CPatient%23setSold' => 50,
'App%5CEntity%5CPatient%23getIdUser' => 0,
'[C]App%5CEntity%5CPatient%23getIdUser' => 50,
'App%5CEntity%5CPatient%23setIdUser' => 0,
'[C]App%5CEntity%5CPatient%23setIdUser' => 50,
'App%5CEntity%5CPatient%23getIdPlan' => 0,
'[C]App%5CEntity%5CPatient%23getIdPlan' => 50,
'App%5CEntity%5CPatient%23addIdPlan' => 0,
'[C]App%5CEntity%5CPatient%23addIdPlan' => 50,
'App%5CEntity%5CPatient%23removeIdPlan' => 0,
'[C]App%5CEntity%5CPatient%23removeIdPlan' => 50,
'App%5CEntity%5CPatient%24idUser' => 90,
'[C]App%5CEntity%5CPatient%24idUser' => 50,
'App%5CEntity%5CPatient%24sold' => 91,
'[C]App%5CEntity%5CPatient%24sold' => 50,
'App%5CEntity%5CPatient%24idPlan' => 92,
'[C]App%5CEntity%5CPatient%24idPlan' => 50,
'App%5CEntity%5CPlan' => 93,
'[C]App%5CEntity%5CPlan' => 50,
'App%5CEntity%5CPlan%23__construct' => 0,
'[C]App%5CEntity%5CPlan%23__construct' => 50,
'App%5CEntity%5CPlan%23getIdPlan' => 0,
'[C]App%5CEntity%5CPlan%23getIdPlan' => 50,
'App%5CEntity%5CPlan%23getName' => 0,
'[C]App%5CEntity%5CPlan%23getName' => 50,
'App%5CEntity%5CPlan%23setName' => 0,
'[C]App%5CEntity%5CPlan%23setName' => 50,
'App%5CEntity%5CPlan%23getDescription' => 0,
'[C]App%5CEntity%5CPlan%23getDescription' => 50,
'App%5CEntity%5CPlan%23setDescription' => 0,
'[C]App%5CEntity%5CPlan%23setDescription' => 50,
'App%5CEntity%5CPlan%23getCost' => 0,
'[C]App%5CEntity%5CPlan%23getCost' => 50,
'App%5CEntity%5CPlan%23setCost' => 0,
'[C]App%5CEntity%5CPlan%23setCost' => 50,
'App%5CEntity%5CPlan%23getIdAdvantage' => 0,
'[C]App%5CEntity%5CPlan%23getIdAdvantage' => 50,
'App%5CEntity%5CPlan%23addIdAdvantage' => 0,
'[C]App%5CEntity%5CPlan%23addIdAdvantage' => 50,
'App%5CEntity%5CPlan%23removeIdAdvantage' => 0,
'[C]App%5CEntity%5CPlan%23removeIdAdvantage' => 50,
'App%5CEntity%5CPlan%23getIdResources' => 0,
'[C]App%5CEntity%5CPlan%23getIdResources' => 50,
'App%5CEntity%5CPlan%23addIdResource' => 0,
'[C]App%5CEntity%5CPlan%23addIdResource' => 50,
'App%5CEntity%5CPlan%23removeIdResource' => 0,
'[C]App%5CEntity%5CPlan%23removeIdResource' => 50,
'App%5CEntity%5CPlan%23getIdUser' => 0,
'[C]App%5CEntity%5CPlan%23getIdUser' => 50,
'App%5CEntity%5CPlan%23addIdUser' => 0,
'[C]App%5CEntity%5CPlan%23addIdUser' => 50,
'App%5CEntity%5CPlan%23removeIdUser' => 0,
'[C]App%5CEntity%5CPlan%23removeIdUser' => 50,
'App%5CEntity%5CPlan%24idPlan' => 94,
'[C]App%5CEntity%5CPlan%24idPlan' => 50,
'App%5CEntity%5CPlan%24name' => 95,
'[C]App%5CEntity%5CPlan%24name' => 50,
'App%5CEntity%5CPlan%24description' => 96,
'[C]App%5CEntity%5CPlan%24description' => 50,
'App%5CEntity%5CPlan%24cost' => 97,
'[C]App%5CEntity%5CPlan%24cost' => 50,
'App%5CEntity%5CPlan%24idAdvantage' => 98,
'[C]App%5CEntity%5CPlan%24idAdvantage' => 50,
'App%5CEntity%5CPlan%24idResources' => 99,
'[C]App%5CEntity%5CPlan%24idResources' => 50,
'App%5CEntity%5CPlan%24idUser' => 100,
'[C]App%5CEntity%5CPlan%24idUser' => 50,
'App%5CEntity%5CPlanningRules' => 101,
'[C]App%5CEntity%5CPlanningRules' => 50,
'App%5CEntity%5CPlanningRules%23getIdPlanningRules' => 0,
'[C]App%5CEntity%5CPlanningRules%23getIdPlanningRules' => 50,
'App%5CEntity%5CPlanningRules%23getMinimalTimeSlot' => 0,
'[C]App%5CEntity%5CPlanningRules%23getMinimalTimeSlot' => 50,
'App%5CEntity%5CPlanningRules%23setMinimalTimeSlot' => 0,
'[C]App%5CEntity%5CPlanningRules%23setMinimalTimeSlot' => 50,
'App%5CEntity%5CPlanningRules%23getMaximalTimeSlot' => 0,
'[C]App%5CEntity%5CPlanningRules%23getMaximalTimeSlot' => 50,
'App%5CEntity%5CPlanningRules%23setMaximalTimeSlot' => 0,
'[C]App%5CEntity%5CPlanningRules%23setMaximalTimeSlot' => 50,
'App%5CEntity%5CPlanningRules%23getWorkDays' => 0,
'[C]App%5CEntity%5CPlanningRules%23getWorkDays' => 50,
'App%5CEntity%5CPlanningRules%23setWorkDays' => 0,
'[C]App%5CEntity%5CPlanningRules%23setWorkDays' => 50,
'App%5CEntity%5CPlanningRules%23getWorkHoursStart' => 0,
'[C]App%5CEntity%5CPlanningRules%23getWorkHoursStart' => 50,
'App%5CEntity%5CPlanningRules%23setWorkHoursStart' => 0,
'[C]App%5CEntity%5CPlanningRules%23setWorkHoursStart' => 50,
'App%5CEntity%5CPlanningRules%23getWorkHoursEnd' => 0,
'[C]App%5CEntity%5CPlanningRules%23getWorkHoursEnd' => 50,
'App%5CEntity%5CPlanningRules%23setWorkHoursEnd' => 0,
'[C]App%5CEntity%5CPlanningRules%23setWorkHoursEnd' => 50,
'App%5CEntity%5CPlanningRules%23getTimeBetweenAppointments' => 0,
'[C]App%5CEntity%5CPlanningRules%23getTimeBetweenAppointments' => 50,
'App%5CEntity%5CPlanningRules%23setTimeBetweenAppointments' => 0,
'[C]App%5CEntity%5CPlanningRules%23setTimeBetweenAppointments' => 50,
'App%5CEntity%5CPlanningRules%23getIdUser' => 0,
'[C]App%5CEntity%5CPlanningRules%23getIdUser' => 50,
'App%5CEntity%5CPlanningRules%23setIdUser' => 0,
'[C]App%5CEntity%5CPlanningRules%23setIdUser' => 50,
'App%5CEntity%5CPlanningRules%24idPlanningRules' => 102,
'[C]App%5CEntity%5CPlanningRules%24idPlanningRules' => 50,
'App%5CEntity%5CPlanningRules%24minimalTimeSlot' => 103,
'[C]App%5CEntity%5CPlanningRules%24minimalTimeSlot' => 50,
'App%5CEntity%5CPlanningRules%24maximalTimeSlot' => 104,
'[C]App%5CEntity%5CPlanningRules%24maximalTimeSlot' => 50,
'App%5CEntity%5CPlanningRules%24workDays' => 105,
'[C]App%5CEntity%5CPlanningRules%24workDays' => 50,
'App%5CEntity%5CPlanningRules%24workHoursStart' => 106,
'[C]App%5CEntity%5CPlanningRules%24workHoursStart' => 50,
'App%5CEntity%5CPlanningRules%24workHoursEnd' => 107,
'[C]App%5CEntity%5CPlanningRules%24workHoursEnd' => 50,
'App%5CEntity%5CPlanningRules%24timeBetweenAppointments' => 108,
'[C]App%5CEntity%5CPlanningRules%24timeBetweenAppointments' => 50,
'App%5CEntity%5CPlanningRules%24idUser' => 109,
'[C]App%5CEntity%5CPlanningRules%24idUser' => 50,
'App%5CEntity%5CResources' => 110,
'[C]App%5CEntity%5CResources' => 50,
'App%5CEntity%5CResources%23__construct' => 0,
'[C]App%5CEntity%5CResources%23__construct' => 50,
'App%5CEntity%5CResources%23getIdResources' => 0,
'[C]App%5CEntity%5CResources%23getIdResources' => 50,
'App%5CEntity%5CResources%23getIdText' => 0,
'[C]App%5CEntity%5CResources%23getIdText' => 50,
'App%5CEntity%5CResources%23addIdText' => 0,
'[C]App%5CEntity%5CResources%23addIdText' => 50,
'App%5CEntity%5CResources%23removeIdText' => 0,
'[C]App%5CEntity%5CResources%23removeIdText' => 50,
'App%5CEntity%5CResources%23getIdFiles' => 0,
'[C]App%5CEntity%5CResources%23getIdFiles' => 50,
'App%5CEntity%5CResources%23addIdFile' => 0,
'[C]App%5CEntity%5CResources%23addIdFile' => 50,
'App%5CEntity%5CResources%23removeIdFile' => 0,
'[C]App%5CEntity%5CResources%23removeIdFile' => 50,
'App%5CEntity%5CResources%23getIdPlan' => 0,
'[C]App%5CEntity%5CResources%23getIdPlan' => 50,
'App%5CEntity%5CResources%23addIdPlan' => 0,
'[C]App%5CEntity%5CResources%23addIdPlan' => 50,
'App%5CEntity%5CResources%23removeIdPlan' => 0,
'[C]App%5CEntity%5CResources%23removeIdPlan' => 50,
'App%5CEntity%5CResources%24idResources' => 111,
'[C]App%5CEntity%5CResources%24idResources' => 50,
'App%5CEntity%5CResources%24idText' => 112,
'[C]App%5CEntity%5CResources%24idText' => 50,
'App%5CEntity%5CResources%24idFiles' => 113,
'[C]App%5CEntity%5CResources%24idFiles' => 50,
'App%5CEntity%5CResources%24idPlan' => 114,
'[C]App%5CEntity%5CResources%24idPlan' => 50,
'App%5CEntity%5CSchedule' => 115,
'[C]App%5CEntity%5CSchedule' => 50,
'App%5CEntity%5CSchedule%23getIdSchedule' => 0,
'[C]App%5CEntity%5CSchedule%23getIdSchedule' => 50,
'App%5CEntity%5CSchedule%23getWeekNumber' => 0,
'[C]App%5CEntity%5CSchedule%23getWeekNumber' => 50,
'App%5CEntity%5CSchedule%23setWeekNumber' => 0,
'[C]App%5CEntity%5CSchedule%23setWeekNumber' => 50,
'App%5CEntity%5CSchedule%23getYearDate' => 0,
'[C]App%5CEntity%5CSchedule%23getYearDate' => 50,
'App%5CEntity%5CSchedule%23setYearDate' => 0,
'[C]App%5CEntity%5CSchedule%23setYearDate' => 50,
'App%5CEntity%5CSchedule%23getHourStartDate' => 0,
'[C]App%5CEntity%5CSchedule%23getHourStartDate' => 50,
'App%5CEntity%5CSchedule%23setHourStartDate' => 0,
'[C]App%5CEntity%5CSchedule%23setHourStartDate' => 50,
'App%5CEntity%5CSchedule%23getHourEndDate' => 0,
'[C]App%5CEntity%5CSchedule%23getHourEndDate' => 50,
'App%5CEntity%5CSchedule%23setHourEndDate' => 0,
'[C]App%5CEntity%5CSchedule%23setHourEndDate' => 50,
'App%5CEntity%5CSchedule%24idSchedule' => 116,
'[C]App%5CEntity%5CSchedule%24idSchedule' => 50,
'App%5CEntity%5CSchedule%24weekNumber' => 117,
'[C]App%5CEntity%5CSchedule%24weekNumber' => 50,
'App%5CEntity%5CSchedule%24yearDate' => 118,
'[C]App%5CEntity%5CSchedule%24yearDate' => 50,
'App%5CEntity%5CSchedule%24hourStartDate' => 119,
'[C]App%5CEntity%5CSchedule%24hourStartDate' => 50,
'App%5CEntity%5CSchedule%24hourEndDate' => 120,
'[C]App%5CEntity%5CSchedule%24hourEndDate' => 50,
'App%5CEntity%5CText' => 121,
'[C]App%5CEntity%5CText' => 50,
'App%5CEntity%5CText%23__construct' => 0,
'[C]App%5CEntity%5CText%23__construct' => 50,
'App%5CEntity%5CText%23getIdText' => 0,
'[C]App%5CEntity%5CText%23getIdText' => 50,
'App%5CEntity%5CText%23getText' => 0,
'[C]App%5CEntity%5CText%23getText' => 50,
'App%5CEntity%5CText%23setText' => 0,
'[C]App%5CEntity%5CText%23setText' => 50,
'App%5CEntity%5CText%23getIdResources' => 0,
'[C]App%5CEntity%5CText%23getIdResources' => 50,
'App%5CEntity%5CText%23addIdResource' => 0,
'[C]App%5CEntity%5CText%23addIdResource' => 50,
'App%5CEntity%5CText%23removeIdResource' => 0,
'[C]App%5CEntity%5CText%23removeIdResource' => 50,
'App%5CEntity%5CText%24idText' => 122,
'[C]App%5CEntity%5CText%24idText' => 50,
'App%5CEntity%5CText%24text' => 123,
'[C]App%5CEntity%5CText%24text' => 50,
'App%5CEntity%5CText%24idResources' => 124,
'[C]App%5CEntity%5CText%24idResources' => 50,
'App%5CEntity%5CTransaction' => 125,
'[C]App%5CEntity%5CTransaction' => 50,
'App%5CEntity%5CTransaction%23getIdTransaction' => 0,
'[C]App%5CEntity%5CTransaction%23getIdTransaction' => 50,
'App%5CEntity%5CTransaction%23getDateTransaction' => 0,
'[C]App%5CEntity%5CTransaction%23getDateTransaction' => 50,
'App%5CEntity%5CTransaction%23setDateTransaction' => 0,
'[C]App%5CEntity%5CTransaction%23setDateTransaction' => 50,
'App%5CEntity%5CTransaction%23getAmount' => 0,
'[C]App%5CEntity%5CTransaction%23getAmount' => 50,
'App%5CEntity%5CTransaction%23setAmount' => 0,
'[C]App%5CEntity%5CTransaction%23setAmount' => 50,
'App%5CEntity%5CTransaction%23getPaymentMethod' => 0,
'[C]App%5CEntity%5CTransaction%23getPaymentMethod' => 50,
'App%5CEntity%5CTransaction%23setPaymentMethod' => 0,
'[C]App%5CEntity%5CTransaction%23setPaymentMethod' => 50,
'App%5CEntity%5CTransaction%23getIdUser' => 0,
'[C]App%5CEntity%5CTransaction%23getIdUser' => 50,
'App%5CEntity%5CTransaction%23setIdUser' => 0,
'[C]App%5CEntity%5CTransaction%23setIdUser' => 50,
'App%5CEntity%5CTransaction%24idTransaction' => 126,
'[C]App%5CEntity%5CTransaction%24idTransaction' => 50,
'App%5CEntity%5CTransaction%24dateTransaction' => 127,
'[C]App%5CEntity%5CTransaction%24dateTransaction' => 50,
'App%5CEntity%5CTransaction%24amount' => 128,
'[C]App%5CEntity%5CTransaction%24amount' => 50,
'App%5CEntity%5CTransaction%24paymentMethod' => 129,
'[C]App%5CEntity%5CTransaction%24paymentMethod' => 50,
'App%5CEntity%5CTransaction%24idUser' => 130,
'[C]App%5CEntity%5CTransaction%24idUser' => 50,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController' => 0,
'[C]Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController' => 50,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23__construct' => 0,
'[C]Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23__construct' => 50,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23explainAction' => 0,
'[C]Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23explainAction' => 50,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23explainSQLitePlatform' => 0,
'[C]Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23explainSQLitePlatform' => 50,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23explainOtherPlatform' => 0,
'[C]Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23explainOtherPlatform' => 50,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23explainOraclePlatform' => 0,
'[C]Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23explainOraclePlatform' => 50,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%24twig' => 0,
'[C]Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%24twig' => 50,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%24registry' => 0,
'[C]Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%24registry' => 50,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%24profiler' => 0,
'[C]Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%24profiler' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23__construct' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23__construct' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23addInsert' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23addInsert' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getInserts' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getInserts' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getSelectSQL' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getSelectSQL' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getCountSQL' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getCountSQL' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getInsertSQL' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getInsertSQL' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getResultSetMapping' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getResultSetMapping' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getSelectConditionStatementSQL' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getSelectConditionStatementSQL' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23exists' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23exists' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getCacheRegion' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getCacheRegion' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getEntityHydrator' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getEntityHydrator' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23storeEntityCache' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23storeEntityCache' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23storeJoinedAssociations' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23storeJoinedAssociations' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getHash' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getHash' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23expandParameters' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23expandParameters' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23expandCriteriaParameters' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23expandCriteriaParameters' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getClassMetadata' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getClassMetadata' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getManyToManyCollection' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getManyToManyCollection' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getOneToManyCollection' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getOneToManyCollection' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getOwningTable' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getOwningTable' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23executeInserts' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23executeInserts' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23load' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23load' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadAll' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadAll' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadById' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadById' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23count' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23count' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadCriteria' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadCriteria' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadManyToManyCollection' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadManyToManyCollection' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadOneToManyCollection' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadOneToManyCollection' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadOneToOneEntity' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadOneToOneEntity' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23lock' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23lock' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23refresh' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23refresh' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23buildCollectionCacheKey' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23buildCollectionCacheKey' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CCachedPersister%23afterTransactionComplete' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CCachedPersister%23afterTransactionComplete' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CCachedPersister%23afterTransactionRolledBack' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CCachedPersister%23afterTransactionRolledBack' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23update' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23update' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23delete' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23delete' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24uow' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24uow' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24metadataFactory' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24metadataFactory' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24persister' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24persister' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24class' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24class' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24queuedCache' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24queuedCache' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24region' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24region' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24timestampRegion' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24timestampRegion' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24timestampKey' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24timestampKey' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24hydrator' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24hydrator' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24cache' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24cache' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24cacheLogger' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24cacheLogger' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24regionName' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24regionName' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24joinedAssociations' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24joinedAssociations' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CCachedEntityPersister' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CCachedEntityPersister' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CCachedEntityPersister%23getEntityHydrator' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CCachedEntityPersister%23getEntityHydrator' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CCachedEntityPersister%23storeEntityCache' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CCachedEntityPersister%23storeEntityCache' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CCachedPersister%23getCacheRegion' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CCachedPersister%23getCacheRegion' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getClassMetadata' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getClassMetadata' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getResultSetMapping' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getResultSetMapping' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getInserts' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getInserts' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getInsertSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getInsertSQL' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getSelectSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getSelectSQL' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getCountSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getCountSQL' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23expandParameters' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23expandParameters' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23expandCriteriaParameters' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23expandCriteriaParameters' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getSelectConditionStatementSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getSelectConditionStatementSQL' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23addInsert' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23addInsert' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23executeInserts' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23executeInserts' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23count' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23count' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getOwningTable' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getOwningTable' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23load' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23load' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadById' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadById' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadOneToOneEntity' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadOneToOneEntity' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23refresh' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23refresh' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadCriteria' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadCriteria' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadAll' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadAll' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getManyToManyCollection' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getManyToManyCollection' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadManyToManyCollection' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadManyToManyCollection' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadOneToManyCollection' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadOneToManyCollection' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23lock' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23lock' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getOneToManyCollection' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getOneToManyCollection' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23exists' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23exists' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23afterTransactionComplete' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23afterTransactionComplete' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23afterTransactionRolledBack' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23afterTransactionRolledBack' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23delete' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23delete' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23update' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23update' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23updateCache' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23updateCache' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadOnlyCachedEntityPersister' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadOnlyCachedEntityPersister' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadOnlyCachedEntityPersister%23update' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadOnlyCachedEntityPersister%23update' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23__construct' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23__construct' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23afterTransactionComplete' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23afterTransactionComplete' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23afterTransactionRolledBack' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23afterTransactionRolledBack' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23delete' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23delete' => 50,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23update' => 0,
'[C]Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23update' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister%23prepareInsertData' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister%23prepareInsertData' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister%23getDiscriminatorColumnTableName' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister%23getDiscriminatorColumnTableName' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister%23getSelectColumnSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister%23getSelectColumnSQL' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister%23getSelectJoinColumnSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister%23getSelectJoinColumnSQL' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23__construct' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23__construct' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getClassMetadata' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getClassMetadata' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getResultSetMapping' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getResultSetMapping' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23addInsert' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23addInsert' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getInserts' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getInserts' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23executeInserts' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23executeInserts' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23assignDefaultVersionAndUpsertableValues' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23assignDefaultVersionAndUpsertableValues' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23fetchVersionAndNotUpsertableValues' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23fetchVersionAndNotUpsertableValues' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23extractIdentifierTypes' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23extractIdentifierTypes' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23update' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23update' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23updateTable' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23updateTable' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23deleteJoinTableRecords' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23deleteJoinTableRecords' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23delete' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23delete' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23prepareUpdateData' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23prepareUpdateData' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getOwningTable' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getOwningTable' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23load' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23load' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadById' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadById' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadOneToOneEntity' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadOneToOneEntity' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23refresh' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23refresh' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23count' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23count' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadCriteria' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadCriteria' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23expandCriteriaParameters' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23expandCriteriaParameters' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadAll' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadAll' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getManyToManyCollection' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getManyToManyCollection' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadManyToManyCollection' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadManyToManyCollection' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectSQL' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getCountSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getCountSQL' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getOrderBySQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getOrderBySQL' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectColumnsSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectColumnsSQL' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectColumnAssociationSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectColumnAssociationSQL' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectManyToManyJoinSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectManyToManyJoinSQL' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getInsertSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getInsertSQL' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getInsertColumnList' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getInsertColumnList' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSQLTableAlias' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSQLTableAlias' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23lock' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23lock' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getLockTablesSql' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getLockTablesSql' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectConditionCriteriaSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectConditionCriteriaSQL' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectConditionStatementSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectConditionStatementSQL' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectConditionSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectConditionSQL' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getOneToManyCollection' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getOneToManyCollection' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadOneToManyCollection' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadOneToManyCollection' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23expandParameters' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23expandParameters' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23exists' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23exists' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getJoinSQLForJoinColumns' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getJoinSQLForJoinColumns' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSQLColumnAlias' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSQLColumnAlias' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23generateFilterConditionSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23generateFilterConditionSQL' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23switchPersisterContext' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23switchPersisterContext' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getClassIdentifiersTypes' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getClassIdentifiersTypes' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24class' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24class' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24conn' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24conn' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24platform' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24platform' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24em' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24em' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24queuedInserts' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24queuedInserts' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24columnTypes' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24columnTypes' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24quotedColumns' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24quotedColumns' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24quoteStrategy' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24quoteStrategy' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24identifierFlattener' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24identifierFlattener' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24currentPersisterContext' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24currentPersisterContext' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23prepareInsertData' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23prepareInsertData' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadArrayFromResult' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadArrayFromResult' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadCollectionFromStatement' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadCollectionFromStatement' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getManyToManyStatement' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getManyToManyStatement' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectColumnSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectColumnSQL' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectConditionStatementColumnSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectConditionStatementColumnSQL' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getOneToManyStatement' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getOneToManyStatement' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23expandToManyParameters' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23expandToManyParameters' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getTypes' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getTypes' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getValues' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getValues' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getIndividualValue' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getIndividualValue' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24comparisonMap' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24comparisonMap' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24insertSql' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24insertSql' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24limitsHandlingContext' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24limitsHandlingContext' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24noLimitsContext' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24noLimitsContext' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%23__construct' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%23__construct' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24class' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24class' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24rsm' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24rsm' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24selectColumnListSql' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24selectColumnListSql' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24selectJoinSql' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24selectJoinSql' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24sqlAliasCounter' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24sqlAliasCounter' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24sqlTableAliases' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24sqlTableAliases' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24handlesLimits' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24handlesLimits' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getDiscriminatorColumnTableName' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getDiscriminatorColumnTableName' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getVersionedClassMetadata' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getVersionedClassMetadata' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getOwningTable' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getOwningTable' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23executeInserts' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23executeInserts' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23update' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23update' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23delete' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23delete' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getSelectSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getSelectSQL' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getCountSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getCountSQL' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getLockTablesSql' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getLockTablesSql' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getSelectColumnsSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getSelectColumnsSQL' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getInsertColumnList' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getInsertColumnList' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23assignDefaultVersionAndUpsertableValues' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23assignDefaultVersionAndUpsertableValues' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23fetchVersionAndNotUpsertableValues' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23fetchVersionAndNotUpsertableValues' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getJoinSql' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getJoinSql' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getSQLResultCasing' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getSQLResultCasing' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%24owningTableMap' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%24owningTableMap' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%24quotedTableMap' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%24quotedTableMap' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getDiscriminatorColumnTableName' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getDiscriminatorColumnTableName' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSelectColumnsSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSelectColumnsSQL' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getInsertColumnList' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getInsertColumnList' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSQLTableAlias' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSQLTableAlias' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSelectConditionSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSelectConditionSQL' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSelectConditionCriteriaSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSelectConditionCriteriaSQL' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSelectConditionDiscriminatorValueSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSelectConditionDiscriminatorValueSQL' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23generateFilterConditionSQL' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23generateFilterConditionSQL' => 50,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSQLResultCasing' => 0,
'[C]Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSQLResultCasing' => 50,
'Nelmio%5CApiDocBundle%5CController%5CDocumentationController' => 0,
'[C]Nelmio%5CApiDocBundle%5CController%5CDocumentationController' => 50,
'Nelmio%5CApiDocBundle%5CController%5CDocumentationController%23__construct' => 0,
'[C]Nelmio%5CApiDocBundle%5CController%5CDocumentationController%23__construct' => 50,
'Nelmio%5CApiDocBundle%5CController%5CDocumentationController%23__invoke' => 0,
'[C]Nelmio%5CApiDocBundle%5CController%5CDocumentationController%23__invoke' => 50,
'Nelmio%5CApiDocBundle%5CController%5CDocumentationController%24renderOpenApi' => 0,
'[C]Nelmio%5CApiDocBundle%5CController%5CDocumentationController%24renderOpenApi' => 50,
'Nelmio%5CApiDocBundle%5CController%5CSwaggerUiController' => 0,
'[C]Nelmio%5CApiDocBundle%5CController%5CSwaggerUiController' => 50,
'Nelmio%5CApiDocBundle%5CController%5CSwaggerUiController%23__construct' => 0,
'[C]Nelmio%5CApiDocBundle%5CController%5CSwaggerUiController%23__construct' => 50,
'Nelmio%5CApiDocBundle%5CController%5CSwaggerUiController%23__invoke' => 0,
'[C]Nelmio%5CApiDocBundle%5CController%5CSwaggerUiController%23__invoke' => 50,
'Nelmio%5CApiDocBundle%5CController%5CSwaggerUiController%24renderOpenApi' => 0,
'[C]Nelmio%5CApiDocBundle%5CController%5CSwaggerUiController%24renderOpenApi' => 50,
'Nelmio%5CApiDocBundle%5CController%5CYamlDocumentationController' => 0,
'[C]Nelmio%5CApiDocBundle%5CController%5CYamlDocumentationController' => 50,
'Nelmio%5CApiDocBundle%5CController%5CYamlDocumentationController%23__construct' => 0,
'[C]Nelmio%5CApiDocBundle%5CController%5CYamlDocumentationController%23__construct' => 50,
'Nelmio%5CApiDocBundle%5CController%5CYamlDocumentationController%23__invoke' => 0,
'[C]Nelmio%5CApiDocBundle%5CController%5CYamlDocumentationController%23__invoke' => 50,
'Nelmio%5CApiDocBundle%5CController%5CYamlDocumentationController%24renderOpenApi' => 0,
'[C]Nelmio%5CApiDocBundle%5CController%5CYamlDocumentationController%24renderOpenApi' => 50,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController' => 50,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%23__construct' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%23__construct' => 50,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%23redirectAction' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%23redirectAction' => 50,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%23urlRedirectAction' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%23urlRedirectAction' => 50,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%23__invoke' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%23__invoke' => 50,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%24router' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%24router' => 50,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%24httpPort' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%24httpPort' => 50,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%24httpsPort' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%24httpsPort' => 50,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController' => 50,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController%23__construct' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController%23__construct' => 50,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController%23templateAction' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController%23templateAction' => 50,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController%23__invoke' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController%23__invoke' => 50,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController%24twig' => 0,
'[C]Symfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController%24twig' => 50,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionPanelController' => 0,
'[C]Symfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionPanelController' => 50,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionPanelController%23__construct' => 0,
'[C]Symfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionPanelController%23__construct' => 50,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionPanelController%23body' => 0,
'[C]Symfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionPanelController%23body' => 50,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionPanelController%23stylesheet' => 0,
'[C]Symfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionPanelController%23stylesheet' => 50,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionPanelController%24errorRenderer' => 0,
'[C]Symfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionPanelController%24errorRenderer' => 50,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionPanelController%24profiler' => 0,
'[C]Symfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionPanelController%24profiler' => 50,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController' => 0,
'[C]Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController' => 50,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23__construct' => 0,
'[C]Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23__construct' => 50,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23homeAction' => 0,
'[C]Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23homeAction' => 50,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23panelAction' => 0,
'[C]Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23panelAction' => 50,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23toolbarAction' => 0,
'[C]Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23toolbarAction' => 50,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23searchBarAction' => 0,
'[C]Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23searchBarAction' => 50,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23searchResultsAction' => 0,
'[C]Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23searchResultsAction' => 50,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23searchAction' => 0,
'[C]Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23searchAction' => 50,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23phpinfoAction' => 0,
'[C]Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23phpinfoAction' => 50,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23openAction' => 0,
'[C]Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23openAction' => 50,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23getTemplateManager' => 0,
'[C]Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23getTemplateManager' => 50,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23denyAccessIfProfilerDisabled' => 0,
'[C]Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23denyAccessIfProfilerDisabled' => 50,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23renderWithCspNonces' => 0,
'[C]Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23renderWithCspNonces' => 50,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24templateManager' => 0,
'[C]Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24templateManager' => 50,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24generator' => 0,
'[C]Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24generator' => 50,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24profiler' => 0,
'[C]Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24profiler' => 50,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24twig' => 0,
'[C]Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24twig' => 50,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24templates' => 0,
'[C]Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24templates' => 50,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24cspHandler' => 0,
'[C]Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24cspHandler' => 50,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24baseDir' => 0,
'[C]Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24baseDir' => 50,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController' => 0,
'[C]Symfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController' => 50,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%23__construct' => 0,
'[C]Symfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%23__construct' => 50,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%23panelAction' => 0,
'[C]Symfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%23panelAction' => 50,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%23getTraces' => 0,
'[C]Symfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%23getTraces' => 50,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%24profiler' => 0,
'[C]Symfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%24profiler' => 50,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%24twig' => 0,
'[C]Symfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%24twig' => 50,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%24matcher' => 0,
'[C]Symfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%24matcher' => 50,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%24routes' => 0,
'[C]Symfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%24routes' => 50,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%24expressionLanguageProviders' => 0,
'[C]Symfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%24expressionLanguageProviders' => 50,
'Symfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver' => 0,
'[C]Symfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver' => 50,
'Symfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver%23__construct' => 0,
'[C]Symfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver%23__construct' => 50,
'Symfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver%23supports' => 0,
'[C]Symfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver%23supports' => 50,
'Symfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver%23resolve' => 0,
'[C]Symfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver%23resolve' => 50,
'Symfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver%24tokenStorage' => 0,
'[C]Symfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver%24tokenStorage' => 50,

], [

0 => [],
1 => 1701744197,
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                ],
                'response' => [
                    200,
                ],
                'description' => [
                    'OK',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                ],
                'name' => [
                    3 => 'Admin',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
        ],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                    6 => $o[7],
                    9 => $o[10],
                    12 => $o[13],
                    15 => $o[16],
                ],
                'response' => [
                    202,
                ],
                'description' => [
                    'Accepted',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                    10 => $o[11],
                    13 => $o[14],
                    16 => $o[17],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    7 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    10 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    13 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    16 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                    7 => 1481,
                    10 => 1481,
                    13 => 1481,
                    16 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                    7 => 'instantiateAnnotiation',
                    10 => 'instantiateAnnotiation',
                    13 => 'instantiateAnnotiation',
                    16 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                    7 => 'DocParser',
                    10 => 'DocParser',
                    13 => 'DocParser',
                    16 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    16 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                    7 => [
                        $o[6],
                    ],
                    10 => [
                        $o[9],
                    ],
                    13 => [
                        $o[12],
                    ],
                    16 => [
                        $o[15],
                    ],
                ],
                '_unmerged' => [
                    3 => [
                        $o[6],
                    ],
                ],
                'required' => [
                    3 => true,
                ],
                'properties' => [
                    6 => [
                        $o[9],
                        $o[12],
                    ],
                ],
                'type' => [
                    6 => 'object',
                    9 => 'string',
                    12 => 'string',
                ],
                'format' => [
                    9 => 'email',
                ],
                'property' => [
                    9 => 'email',
                    12 => 'password',
                ],
                'name' => [
                    15 => 'Admin',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
            $o[15],
        ],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                ],
                'response' => [
                    204,
                ],
                'description' => [
                    'No content',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                ],
                'name' => [
                    3 => 'Admin',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
        ],
        []
    );
},
5 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                ],
                'response' => [
                    200,
                ],
                'description' => [
                    'Ok',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                ],
                'name' => [
                    3 => 'Advantages',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
        ],
        []
    );
},
6 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                    6 => $o[7],
                    9 => $o[10],
                    12 => $o[13],
                ],
                'response' => [
                    201,
                ],
                'description' => [
                    'Created',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                    10 => $o[11],
                    13 => $o[14],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    7 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    10 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    13 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                    7 => 1481,
                    10 => 1481,
                    13 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                    7 => 'instantiateAnnotiation',
                    10 => 'instantiateAnnotiation',
                    13 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                    7 => 'DocParser',
                    10 => 'DocParser',
                    13 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                    7 => [
                        $o[6],
                    ],
                    10 => [
                        $o[9],
                    ],
                    13 => [
                        $o[12],
                    ],
                ],
                '_unmerged' => [
                    3 => [
                        $o[6],
                    ],
                ],
                'required' => [
                    3 => true,
                ],
                'properties' => [
                    6 => [
                        $o[9],
                    ],
                ],
                'type' => [
                    6 => 'object',
                    9 => 'string',
                ],
                'property' => [
                    9 => 'description',
                ],
                'name' => [
                    12 => 'Advantages',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
            $o[12],
        ],
        []
    );
},
7 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                    6 => $o[7],
                    9 => $o[10],
                    12 => $o[13],
                ],
                'response' => [
                    202,
                ],
                'description' => [
                    'Accepted',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                    10 => $o[11],
                    13 => $o[14],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    7 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    10 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    13 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                    7 => 1481,
                    10 => 1481,
                    13 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                    7 => 'instantiateAnnotiation',
                    10 => 'instantiateAnnotiation',
                    13 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                    7 => 'DocParser',
                    10 => 'DocParser',
                    13 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                    7 => [
                        $o[6],
                    ],
                    10 => [
                        $o[9],
                    ],
                    13 => [
                        $o[12],
                    ],
                ],
                '_unmerged' => [
                    3 => [
                        $o[6],
                    ],
                ],
                'required' => [
                    3 => true,
                ],
                'properties' => [
                    6 => [
                        $o[9],
                    ],
                ],
                'type' => [
                    6 => 'object',
                    9 => 'string',
                ],
                'property' => [
                    9 => 'description',
                ],
                'name' => [
                    12 => 'Advantages',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
            $o[12],
        ],
        []
    );
},
8 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                ],
                'response' => [
                    204,
                ],
                'description' => [
                    'No content',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                ],
                'name' => [
                    3 => 'Advantages',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
        ],
        []
    );
},
9 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                ],
                'response' => [
                    200,
                ],
                'description' => [
                    'Ok',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                ],
                'name' => [
                    3 => 'Appointment',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
        ],
        []
    );
},
10 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                    6 => $o[7],
                    9 => $o[10],
                    12 => $o[13],
                    15 => $o[16],
                    18 => $o[19],
                    21 => $o[22],
                    24 => $o[25],
                    27 => $o[28],
                    30 => $o[31],
                    33 => $o[34],
                ],
                'response' => [
                    201,
                ],
                'description' => [
                    'Created',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                    10 => $o[11],
                    13 => $o[14],
                    16 => $o[17],
                    19 => $o[20],
                    22 => $o[23],
                    25 => $o[26],
                    28 => $o[29],
                    31 => $o[32],
                    34 => $o[35],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    7 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    10 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    13 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    16 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    19 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    22 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    25 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    28 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    31 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    34 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                    7 => 1481,
                    10 => 1481,
                    13 => 1481,
                    16 => 1481,
                    19 => 1481,
                    22 => 1481,
                    25 => 1481,
                    28 => 1481,
                    31 => 1481,
                    34 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                    7 => 'instantiateAnnotiation',
                    10 => 'instantiateAnnotiation',
                    13 => 'instantiateAnnotiation',
                    16 => 'instantiateAnnotiation',
                    19 => 'instantiateAnnotiation',
                    22 => 'instantiateAnnotiation',
                    25 => 'instantiateAnnotiation',
                    28 => 'instantiateAnnotiation',
                    31 => 'instantiateAnnotiation',
                    34 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                    7 => 'DocParser',
                    10 => 'DocParser',
                    13 => 'DocParser',
                    16 => 'DocParser',
                    19 => 'DocParser',
                    22 => 'DocParser',
                    25 => 'DocParser',
                    28 => 'DocParser',
                    31 => 'DocParser',
                    34 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    16 => 'Doctrine\\Common\\Annotations',
                    19 => 'Doctrine\\Common\\Annotations',
                    22 => 'Doctrine\\Common\\Annotations',
                    25 => 'Doctrine\\Common\\Annotations',
                    28 => 'Doctrine\\Common\\Annotations',
                    31 => 'Doctrine\\Common\\Annotations',
                    34 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                    7 => [
                        $o[6],
                    ],
                    10 => [
                        $o[9],
                    ],
                    13 => [
                        $o[12],
                    ],
                    16 => [
                        $o[15],
                    ],
                    19 => [
                        $o[18],
                    ],
                    22 => [
                        $o[21],
                    ],
                    25 => [
                        $o[24],
                    ],
                    28 => [
                        $o[27],
                    ],
                    31 => [
                        $o[30],
                    ],
                    34 => [
                        $o[33],
                    ],
                ],
                '_unmerged' => [
                    3 => [
                        $o[6],
                    ],
                ],
                'required' => [
                    3 => true,
                ],
                'properties' => [
                    6 => [
                        $o[9],
                        $o[18],
                        $o[27],
                    ],
                    9 => [
                        $o[12],
                    ],
                    12 => [
                        $o[15],
                    ],
                    18 => [
                        $o[21],
                    ],
                    21 => [
                        $o[24],
                    ],
                    27 => [
                        $o[30],
                    ],
                ],
                'type' => [
                    6 => 'object',
                    9 => 'object',
                    12 => 'object',
                    15 => 'integer',
                    18 => 'object',
                    21 => 'object',
                    24 => 'integer',
                    27 => 'object',
                    30 => 'integer',
                ],
                'property' => [
                    9 => 'coach',
                    12 => 'coachInformation',
                    15 => 'idUser',
                    18 => 'patient',
                    21 => 'patientInformation',
                    24 => 'idUser',
                    27 => 'schedule',
                    30 => 'idSchedule',
                ],
                'name' => [
                    33 => 'Appointment',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
            $o[33],
        ],
        []
    );
},
11 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                    6 => $o[7],
                    9 => $o[10],
                    12 => $o[13],
                    15 => $o[16],
                    18 => $o[19],
                    21 => $o[22],
                    24 => $o[25],
                ],
                'response' => [
                    202,
                ],
                'description' => [
                    'Accepted',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                    10 => $o[11],
                    13 => $o[14],
                    16 => $o[17],
                    19 => $o[20],
                    22 => $o[23],
                    25 => $o[26],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    7 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    10 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    13 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    16 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    19 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    22 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    25 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                    7 => 1481,
                    10 => 1481,
                    13 => 1481,
                    16 => 1481,
                    19 => 1481,
                    22 => 1481,
                    25 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                    7 => 'instantiateAnnotiation',
                    10 => 'instantiateAnnotiation',
                    13 => 'instantiateAnnotiation',
                    16 => 'instantiateAnnotiation',
                    19 => 'instantiateAnnotiation',
                    22 => 'instantiateAnnotiation',
                    25 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                    7 => 'DocParser',
                    10 => 'DocParser',
                    13 => 'DocParser',
                    16 => 'DocParser',
                    19 => 'DocParser',
                    22 => 'DocParser',
                    25 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    16 => 'Doctrine\\Common\\Annotations',
                    19 => 'Doctrine\\Common\\Annotations',
                    22 => 'Doctrine\\Common\\Annotations',
                    25 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                    7 => [
                        $o[6],
                    ],
                    10 => [
                        $o[9],
                    ],
                    13 => [
                        $o[12],
                    ],
                    16 => [
                        $o[15],
                    ],
                    19 => [
                        $o[18],
                    ],
                    22 => [
                        $o[21],
                    ],
                    25 => [
                        $o[24],
                    ],
                ],
                '_unmerged' => [
                    3 => [
                        $o[6],
                    ],
                ],
                'required' => [
                    3 => true,
                ],
                'properties' => [
                    6 => [
                        $o[9],
                        $o[18],
                    ],
                    9 => [
                        $o[12],
                    ],
                    12 => [
                        $o[15],
                    ],
                    18 => [
                        $o[21],
                    ],
                ],
                'type' => [
                    6 => 'object',
                    9 => 'object',
                    12 => 'object',
                    15 => 'integer',
                    18 => 'object',
                    21 => 'integer',
                ],
                'property' => [
                    9 => 'patient',
                    12 => 'patientInformation',
                    15 => 'idUser',
                    18 => 'schedule',
                    21 => 'idSchedule',
                ],
                'name' => [
                    24 => 'Appointment',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
            $o[24],
        ],
        []
    );
},
12 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                ],
                'response' => [
                    204,
                ],
                'description' => [
                    'No content',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                ],
                'name' => [
                    3 => 'Appointment',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
        ],
        []
    );
},
13 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                ],
                'response' => [
                    200,
                ],
                'description' => [
                    'Ok',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                ],
                'name' => [
                    3 => 'Availabilities',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
        ],
        []
    );
},
14 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                    6 => $o[7],
                    9 => $o[10],
                    12 => $o[13],
                    15 => $o[16],
                    18 => $o[19],
                ],
                'response' => [
                    201,
                ],
                'description' => [
                    'Created',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                    10 => $o[11],
                    13 => $o[14],
                    16 => $o[17],
                    19 => $o[20],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    7 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    10 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    13 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    16 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    19 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                    7 => 1481,
                    10 => 1481,
                    13 => 1481,
                    16 => 1481,
                    19 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                    7 => 'instantiateAnnotiation',
                    10 => 'instantiateAnnotiation',
                    13 => 'instantiateAnnotiation',
                    16 => 'instantiateAnnotiation',
                    19 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                    7 => 'DocParser',
                    10 => 'DocParser',
                    13 => 'DocParser',
                    16 => 'DocParser',
                    19 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    16 => 'Doctrine\\Common\\Annotations',
                    19 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                    7 => [
                        $o[6],
                    ],
                    10 => [
                        $o[9],
                    ],
                    13 => [
                        $o[12],
                    ],
                    16 => [
                        $o[15],
                    ],
                    19 => [
                        $o[18],
                    ],
                ],
                '_unmerged' => [
                    3 => [
                        $o[6],
                    ],
                ],
                'required' => [
                    3 => true,
                ],
                'properties' => [
                    6 => [
                        $o[9],
                        $o[12],
                        $o[15],
                    ],
                ],
                'type' => [
                    6 => 'object',
                    9 => 'string',
                    12 => 'string',
                    15 => 'string',
                ],
                'format' => [
                    9 => 'date-time',
                    12 => 'date-time',
                    15 => 'date-time',
                ],
                'example' => [
                    9 => '2023-12-28T10:00:00+00:00',
                    12 => '2023-12-28T10:00:00+00:00',
                    15 => '2023-12-28T10:00:00+00:00',
                ],
                'property' => [
                    9 => 'dateAvailability',
                    12 => 'hourStartSlot',
                    15 => 'hourEndSlot',
                ],
                'name' => [
                    18 => 'Availabilities',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
            $o[18],
        ],
        []
    );
},
15 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                    6 => $o[7],
                    9 => $o[10],
                    12 => $o[13],
                    15 => $o[16],
                    18 => $o[19],
                ],
                'response' => [
                    202,
                ],
                'description' => [
                    'Accepted',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                    10 => $o[11],
                    13 => $o[14],
                    16 => $o[17],
                    19 => $o[20],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    7 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    10 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    13 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    16 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    19 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                    7 => 1481,
                    10 => 1481,
                    13 => 1481,
                    16 => 1481,
                    19 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                    7 => 'instantiateAnnotiation',
                    10 => 'instantiateAnnotiation',
                    13 => 'instantiateAnnotiation',
                    16 => 'instantiateAnnotiation',
                    19 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                    7 => 'DocParser',
                    10 => 'DocParser',
                    13 => 'DocParser',
                    16 => 'DocParser',
                    19 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    16 => 'Doctrine\\Common\\Annotations',
                    19 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                    7 => [
                        $o[6],
                    ],
                    10 => [
                        $o[9],
                    ],
                    13 => [
                        $o[12],
                    ],
                    16 => [
                        $o[15],
                    ],
                    19 => [
                        $o[18],
                    ],
                ],
                '_unmerged' => [
                    3 => [
                        $o[6],
                    ],
                ],
                'required' => [
                    3 => true,
                ],
                'properties' => [
                    6 => [
                        $o[9],
                        $o[12],
                        $o[15],
                    ],
                ],
                'type' => [
                    6 => 'object',
                    9 => 'string',
                    12 => 'string',
                    15 => 'string',
                ],
                'format' => [
                    9 => 'date-time',
                    12 => 'date-time',
                    15 => 'date-time',
                ],
                'example' => [
                    9 => '2023-12-28T10:00:00+00:00',
                    12 => '2023-12-28T10:00:00+00:00',
                    15 => '2023-12-28T10:00:00+00:00',
                ],
                'property' => [
                    9 => 'dateAvailability',
                    12 => 'hourStartSlot',
                    15 => 'hourEndSlot',
                ],
                'name' => [
                    18 => 'Availabilities',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
            $o[18],
        ],
        []
    );
},
16 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                ],
                'response' => [
                    204,
                ],
                'description' => [
                    'No content',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                ],
                'name' => [
                    3 => 'Availabilities',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
        ],
        []
    );
},
17 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                ],
                'response' => [
                    200,
                ],
                'description' => [
                    'OK',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                ],
                'name' => [
                    3 => 'Coaches',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
        ],
        []
    );
},
18 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                ],
                'response' => [
                    204,
                ],
                'description' => [
                    'No content',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                ],
                'name' => [
                    3 => 'Coaches',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
        ],
        []
    );
},
19 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                ],
                'response' => [
                    200,
                ],
                'description' => [
                    'Ok',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                ],
                'name' => [
                    3 => 'Courses',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
        ],
        []
    );
},
20 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Items')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                    6 => $o[7],
                    9 => $o[10],
                    12 => $o[13],
                    15 => $o[16],
                    18 => $o[19],
                    21 => $o[22],
                    24 => $o[25],
                    27 => $o[28],
                    30 => $o[31],
                    33 => $o[34],
                ],
                'response' => [
                    201,
                ],
                'description' => [
                    'Created',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                    10 => $o[11],
                    13 => $o[14],
                    16 => $o[17],
                    19 => $o[20],
                    22 => $o[23],
                    25 => $o[26],
                    28 => $o[29],
                    31 => $o[32],
                    34 => $o[35],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    7 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    10 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    13 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    16 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    19 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    22 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    25 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    28 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    31 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    34 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                    7 => 1481,
                    10 => 1481,
                    13 => 1481,
                    16 => 1481,
                    19 => 1481,
                    22 => 1481,
                    25 => 1481,
                    28 => 1481,
                    31 => 1481,
                    34 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                    7 => 'instantiateAnnotiation',
                    10 => 'instantiateAnnotiation',
                    13 => 'instantiateAnnotiation',
                    16 => 'instantiateAnnotiation',
                    19 => 'instantiateAnnotiation',
                    22 => 'instantiateAnnotiation',
                    25 => 'instantiateAnnotiation',
                    28 => 'instantiateAnnotiation',
                    31 => 'instantiateAnnotiation',
                    34 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                    7 => 'DocParser',
                    10 => 'DocParser',
                    13 => 'DocParser',
                    16 => 'DocParser',
                    19 => 'DocParser',
                    22 => 'DocParser',
                    25 => 'DocParser',
                    28 => 'DocParser',
                    31 => 'DocParser',
                    34 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    16 => 'Doctrine\\Common\\Annotations',
                    19 => 'Doctrine\\Common\\Annotations',
                    22 => 'Doctrine\\Common\\Annotations',
                    25 => 'Doctrine\\Common\\Annotations',
                    28 => 'Doctrine\\Common\\Annotations',
                    31 => 'Doctrine\\Common\\Annotations',
                    34 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                    7 => [
                        $o[6],
                    ],
                    10 => [
                        $o[9],
                    ],
                    13 => [
                        $o[12],
                    ],
                    16 => [
                        $o[15],
                    ],
                    19 => [
                        $o[18],
                    ],
                    22 => [
                        $o[21],
                    ],
                    25 => [
                        $o[24],
                    ],
                    28 => [
                        $o[27],
                    ],
                    31 => [
                        $o[30],
                    ],
                    34 => [
                        $o[33],
                    ],
                ],
                '_unmerged' => [
                    3 => [
                        $o[6],
                    ],
                ],
                'required' => [
                    3 => true,
                ],
                'properties' => [
                    6 => [
                        $o[9],
                        $o[12],
                        $o[15],
                        $o[18],
                        $o[21],
                    ],
                    24 => [
                        $o[27],
                    ],
                    27 => [
                        $o[30],
                    ],
                ],
                'type' => [
                    6 => 'object',
                    9 => 'string',
                    12 => 'string',
                    15 => 'integer',
                    18 => 'string',
                    21 => 'array',
                    24 => 'object',
                    27 => 'object',
                    30 => 'integer',
                ],
                'property' => [
                    9 => 'name',
                    12 => 'description',
                    15 => 'duration',
                    18 => 'cost',
                    21 => 'coach',
                    27 => 'coachInformation',
                    30 => 'idUser',
                ],
                'items' => [
                    21 => $o[24],
                ],
                'name' => [
                    33 => 'Courses',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
            $o[33],
        ],
        []
    );
},
21 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                    6 => $o[7],
                    9 => $o[10],
                    12 => $o[13],
                    15 => $o[16],
                    18 => $o[19],
                    21 => $o[22],
                ],
                'response' => [
                    202,
                ],
                'description' => [
                    'Accepted',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                    10 => $o[11],
                    13 => $o[14],
                    16 => $o[17],
                    19 => $o[20],
                    22 => $o[23],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    7 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    10 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    13 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    16 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    19 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    22 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                    7 => 1481,
                    10 => 1481,
                    13 => 1481,
                    16 => 1481,
                    19 => 1481,
                    22 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                    7 => 'instantiateAnnotiation',
                    10 => 'instantiateAnnotiation',
                    13 => 'instantiateAnnotiation',
                    16 => 'instantiateAnnotiation',
                    19 => 'instantiateAnnotiation',
                    22 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                    7 => 'DocParser',
                    10 => 'DocParser',
                    13 => 'DocParser',
                    16 => 'DocParser',
                    19 => 'DocParser',
                    22 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    16 => 'Doctrine\\Common\\Annotations',
                    19 => 'Doctrine\\Common\\Annotations',
                    22 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                    7 => [
                        $o[6],
                    ],
                    10 => [
                        $o[9],
                    ],
                    13 => [
                        $o[12],
                    ],
                    16 => [
                        $o[15],
                    ],
                    19 => [
                        $o[18],
                    ],
                    22 => [
                        $o[21],
                    ],
                ],
                '_unmerged' => [
                    3 => [
                        $o[6],
                    ],
                ],
                'required' => [
                    3 => true,
                ],
                'properties' => [
                    6 => [
                        $o[9],
                        $o[12],
                        $o[15],
                        $o[18],
                    ],
                ],
                'type' => [
                    6 => 'object',
                    9 => 'string',
                    12 => 'string',
                    15 => 'integer',
                    18 => 'string',
                ],
                'property' => [
                    9 => 'name',
                    12 => 'description',
                    15 => 'duration',
                    18 => 'cost',
                ],
                'name' => [
                    21 => 'Courses',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
            $o[21],
        ],
        []
    );
},
22 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                ],
                'response' => [
                    204,
                ],
                'description' => [
                    'No content',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                ],
                'name' => [
                    3 => 'Courses',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
        ],
        []
    );
},
23 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                ],
                'response' => [
                    200,
                ],
                'description' => [
                    'OK',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                ],
                'name' => [
                    3 => 'Patients',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
        ],
        []
    );
},
24 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                ],
                'response' => [
                    204,
                ],
                'description' => [
                    'No content',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                ],
                'name' => [
                    3 => 'Patients',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
        ],
        []
    );
},
25 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                ],
                'response' => [
                    200,
                ],
                'description' => [
                    'Ok',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                ],
                'name' => [
                    3 => 'Plans',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
        ],
        []
    );
},
26 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                ],
                'response' => [
                    200,
                ],
                'description' => [
                    'OK',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                ],
                'name' => [
                    3 => 'Plans',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
        ],
        []
    );
},
27 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Items')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Items'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                    6 => $o[7],
                    9 => $o[10],
                    12 => $o[13],
                    15 => $o[16],
                    18 => $o[19],
                    21 => $o[22],
                    24 => $o[25],
                    27 => $o[28],
                    30 => $o[31],
                    33 => $o[34],
                    36 => $o[37],
                ],
                'response' => [
                    201,
                ],
                'description' => [
                    'Created',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                    10 => $o[11],
                    13 => $o[14],
                    16 => $o[17],
                    19 => $o[20],
                    22 => $o[23],
                    25 => $o[26],
                    28 => $o[29],
                    31 => $o[32],
                    34 => $o[35],
                    37 => $o[38],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    7 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    10 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    13 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    16 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    19 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    22 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    25 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    28 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    31 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    34 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    37 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                    7 => 1481,
                    10 => 1481,
                    13 => 1481,
                    16 => 1481,
                    19 => 1481,
                    22 => 1481,
                    25 => 1481,
                    28 => 1481,
                    31 => 1481,
                    34 => 1481,
                    37 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                    7 => 'instantiateAnnotiation',
                    10 => 'instantiateAnnotiation',
                    13 => 'instantiateAnnotiation',
                    16 => 'instantiateAnnotiation',
                    19 => 'instantiateAnnotiation',
                    22 => 'instantiateAnnotiation',
                    25 => 'instantiateAnnotiation',
                    28 => 'instantiateAnnotiation',
                    31 => 'instantiateAnnotiation',
                    34 => 'instantiateAnnotiation',
                    37 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                    7 => 'DocParser',
                    10 => 'DocParser',
                    13 => 'DocParser',
                    16 => 'DocParser',
                    19 => 'DocParser',
                    22 => 'DocParser',
                    25 => 'DocParser',
                    28 => 'DocParser',
                    31 => 'DocParser',
                    34 => 'DocParser',
                    37 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    16 => 'Doctrine\\Common\\Annotations',
                    19 => 'Doctrine\\Common\\Annotations',
                    22 => 'Doctrine\\Common\\Annotations',
                    25 => 'Doctrine\\Common\\Annotations',
                    28 => 'Doctrine\\Common\\Annotations',
                    31 => 'Doctrine\\Common\\Annotations',
                    34 => 'Doctrine\\Common\\Annotations',
                    37 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                    7 => [
                        $o[6],
                    ],
                    10 => [
                        $o[9],
                    ],
                    13 => [
                        $o[12],
                    ],
                    16 => [
                        $o[15],
                    ],
                    19 => [
                        $o[18],
                    ],
                    22 => [
                        $o[21],
                    ],
                    25 => [
                        $o[24],
                    ],
                    28 => [
                        $o[27],
                    ],
                    31 => [
                        $o[30],
                    ],
                    34 => [
                        $o[33],
                    ],
                    37 => [
                        $o[36],
                    ],
                ],
                '_unmerged' => [
                    3 => [
                        $o[6],
                    ],
                ],
                'required' => [
                    3 => true,
                ],
                'properties' => [
                    6 => [
                        $o[9],
                        $o[12],
                        $o[15],
                        $o[18],
                        $o[27],
                    ],
                    21 => [
                        $o[24],
                    ],
                    30 => [
                        $o[33],
                    ],
                ],
                'type' => [
                    6 => 'object',
                    9 => 'string',
                    12 => 'string',
                    15 => 'string',
                    18 => 'array',
                    21 => 'object',
                    24 => 'integer',
                    27 => 'array',
                    30 => 'object',
                    33 => 'integer',
                ],
                'property' => [
                    9 => 'name',
                    12 => 'description',
                    15 => 'cost',
                    18 => 'advantages',
                    24 => 'idAdvantage',
                    27 => 'resources',
                    33 => 'idResources',
                ],
                'format' => [
                    15 => 'float',
                ],
                'items' => [
                    18 => $o[21],
                    27 => $o[30],
                ],
                'name' => [
                    36 => 'Plans',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
            $o[36],
        ],
        []
    );
},
28 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Items')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Items'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                    6 => $o[7],
                    9 => $o[10],
                    12 => $o[13],
                    15 => $o[16],
                    18 => $o[19],
                    21 => $o[22],
                    24 => $o[25],
                    27 => $o[28],
                    30 => $o[31],
                    33 => $o[34],
                    36 => $o[37],
                ],
                'response' => [
                    202,
                ],
                'description' => [
                    'Accepted',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                    10 => $o[11],
                    13 => $o[14],
                    16 => $o[17],
                    19 => $o[20],
                    22 => $o[23],
                    25 => $o[26],
                    28 => $o[29],
                    31 => $o[32],
                    34 => $o[35],
                    37 => $o[38],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    7 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    10 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    13 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    16 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    19 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    22 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    25 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    28 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    31 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    34 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    37 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                    7 => 1481,
                    10 => 1481,
                    13 => 1481,
                    16 => 1481,
                    19 => 1481,
                    22 => 1481,
                    25 => 1481,
                    28 => 1481,
                    31 => 1481,
                    34 => 1481,
                    37 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                    7 => 'instantiateAnnotiation',
                    10 => 'instantiateAnnotiation',
                    13 => 'instantiateAnnotiation',
                    16 => 'instantiateAnnotiation',
                    19 => 'instantiateAnnotiation',
                    22 => 'instantiateAnnotiation',
                    25 => 'instantiateAnnotiation',
                    28 => 'instantiateAnnotiation',
                    31 => 'instantiateAnnotiation',
                    34 => 'instantiateAnnotiation',
                    37 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                    7 => 'DocParser',
                    10 => 'DocParser',
                    13 => 'DocParser',
                    16 => 'DocParser',
                    19 => 'DocParser',
                    22 => 'DocParser',
                    25 => 'DocParser',
                    28 => 'DocParser',
                    31 => 'DocParser',
                    34 => 'DocParser',
                    37 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    16 => 'Doctrine\\Common\\Annotations',
                    19 => 'Doctrine\\Common\\Annotations',
                    22 => 'Doctrine\\Common\\Annotations',
                    25 => 'Doctrine\\Common\\Annotations',
                    28 => 'Doctrine\\Common\\Annotations',
                    31 => 'Doctrine\\Common\\Annotations',
                    34 => 'Doctrine\\Common\\Annotations',
                    37 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                    7 => [
                        $o[6],
                    ],
                    10 => [
                        $o[9],
                    ],
                    13 => [
                        $o[12],
                    ],
                    16 => [
                        $o[15],
                    ],
                    19 => [
                        $o[18],
                    ],
                    22 => [
                        $o[21],
                    ],
                    25 => [
                        $o[24],
                    ],
                    28 => [
                        $o[27],
                    ],
                    31 => [
                        $o[30],
                    ],
                    34 => [
                        $o[33],
                    ],
                    37 => [
                        $o[36],
                    ],
                ],
                '_unmerged' => [
                    3 => [
                        $o[6],
                    ],
                ],
                'required' => [
                    3 => true,
                ],
                'properties' => [
                    6 => [
                        $o[9],
                        $o[12],
                        $o[15],
                        $o[18],
                        $o[27],
                    ],
                    21 => [
                        $o[24],
                    ],
                    30 => [
                        $o[33],
                    ],
                ],
                'type' => [
                    6 => 'object',
                    9 => 'string',
                    12 => 'string',
                    15 => 'string',
                    18 => 'array',
                    21 => 'object',
                    24 => 'integer',
                    27 => 'array',
                    30 => 'object',
                    33 => 'integer',
                ],
                'property' => [
                    9 => 'name',
                    12 => 'description',
                    15 => 'cost',
                    18 => 'advantages',
                    24 => 'idAdvantage',
                    27 => 'resources',
                    33 => 'idResources',
                ],
                'format' => [
                    15 => 'float',
                ],
                'items' => [
                    18 => $o[21],
                    27 => $o[30],
                ],
                'name' => [
                    36 => 'Plans',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
            $o[36],
        ],
        []
    );
},
29 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                ],
                'response' => [
                    204,
                ],
                'description' => [
                    'No content',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                ],
                'name' => [
                    3 => 'Plans',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
        ],
        []
    );
},
30 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                ],
                'response' => [
                    200,
                ],
                'description' => [
                    'OK',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                ],
                'name' => [
                    3 => 'Plannings',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
        ],
        []
    );
},
31 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                    6 => $o[7],
                    9 => $o[10],
                    12 => $o[13],
                    15 => $o[16],
                    18 => $o[19],
                    21 => $o[22],
                    24 => $o[25],
                    27 => $o[28],
                ],
                'response' => [
                    201,
                ],
                'description' => [
                    'Created',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                    10 => $o[11],
                    13 => $o[14],
                    16 => $o[17],
                    19 => $o[20],
                    22 => $o[23],
                    25 => $o[26],
                    28 => $o[29],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    7 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    10 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    13 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    16 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    19 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    22 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    25 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    28 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                    7 => 1481,
                    10 => 1481,
                    13 => 1481,
                    16 => 1481,
                    19 => 1481,
                    22 => 1481,
                    25 => 1481,
                    28 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                    7 => 'instantiateAnnotiation',
                    10 => 'instantiateAnnotiation',
                    13 => 'instantiateAnnotiation',
                    16 => 'instantiateAnnotiation',
                    19 => 'instantiateAnnotiation',
                    22 => 'instantiateAnnotiation',
                    25 => 'instantiateAnnotiation',
                    28 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                    7 => 'DocParser',
                    10 => 'DocParser',
                    13 => 'DocParser',
                    16 => 'DocParser',
                    19 => 'DocParser',
                    22 => 'DocParser',
                    25 => 'DocParser',
                    28 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    16 => 'Doctrine\\Common\\Annotations',
                    19 => 'Doctrine\\Common\\Annotations',
                    22 => 'Doctrine\\Common\\Annotations',
                    25 => 'Doctrine\\Common\\Annotations',
                    28 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                    7 => [
                        $o[6],
                    ],
                    10 => [
                        $o[9],
                    ],
                    13 => [
                        $o[12],
                    ],
                    16 => [
                        $o[15],
                    ],
                    19 => [
                        $o[18],
                    ],
                    22 => [
                        $o[21],
                    ],
                    25 => [
                        $o[24],
                    ],
                    28 => [
                        $o[27],
                    ],
                ],
                '_unmerged' => [
                    3 => [
                        $o[6],
                    ],
                ],
                'required' => [
                    3 => true,
                ],
                'properties' => [
                    6 => [
                        $o[9],
                        $o[12],
                        $o[15],
                        $o[18],
                        $o[21],
                        $o[24],
                    ],
                ],
                'type' => [
                    6 => 'object',
                    9 => 'string',
                    12 => 'string',
                    15 => 'string',
                    18 => 'string',
                    21 => 'string',
                    24 => 'string',
                ],
                'format' => [
                    9 => 'date-time',
                    12 => 'date-time',
                    18 => 'date-time',
                    21 => 'date-time',
                ],
                'example' => [
                    9 => '2023-11-04T10:00:00+00:00',
                    12 => '2023-11-04T10:00:00+00:00',
                    18 => '2023-11-04T09:00:00+00:00',
                    21 => '2023-11-04T08:00:00+00:00',
                ],
                'property' => [
                    9 => 'minimalTimeSlot',
                    12 => 'maximalTimeSlot',
                    15 => 'workDays',
                    18 => 'workHoursStart',
                    21 => 'workHoursEnd',
                    24 => 'timeBetweenAppointments',
                ],
                'name' => [
                    27 => 'Plannings',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
            $o[27],
        ],
        []
    );
},
32 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                    6 => $o[7],
                    9 => $o[10],
                    12 => $o[13],
                    15 => $o[16],
                    18 => $o[19],
                    21 => $o[22],
                    24 => $o[25],
                    27 => $o[28],
                ],
                'response' => [
                    202,
                ],
                'description' => [
                    'Accepted',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                    10 => $o[11],
                    13 => $o[14],
                    16 => $o[17],
                    19 => $o[20],
                    22 => $o[23],
                    25 => $o[26],
                    28 => $o[29],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    7 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    10 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    13 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    16 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    19 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    22 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    25 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    28 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                    7 => 1481,
                    10 => 1481,
                    13 => 1481,
                    16 => 1481,
                    19 => 1481,
                    22 => 1481,
                    25 => 1481,
                    28 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                    7 => 'instantiateAnnotiation',
                    10 => 'instantiateAnnotiation',
                    13 => 'instantiateAnnotiation',
                    16 => 'instantiateAnnotiation',
                    19 => 'instantiateAnnotiation',
                    22 => 'instantiateAnnotiation',
                    25 => 'instantiateAnnotiation',
                    28 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                    7 => 'DocParser',
                    10 => 'DocParser',
                    13 => 'DocParser',
                    16 => 'DocParser',
                    19 => 'DocParser',
                    22 => 'DocParser',
                    25 => 'DocParser',
                    28 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    16 => 'Doctrine\\Common\\Annotations',
                    19 => 'Doctrine\\Common\\Annotations',
                    22 => 'Doctrine\\Common\\Annotations',
                    25 => 'Doctrine\\Common\\Annotations',
                    28 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                    7 => [
                        $o[6],
                    ],
                    10 => [
                        $o[9],
                    ],
                    13 => [
                        $o[12],
                    ],
                    16 => [
                        $o[15],
                    ],
                    19 => [
                        $o[18],
                    ],
                    22 => [
                        $o[21],
                    ],
                    25 => [
                        $o[24],
                    ],
                    28 => [
                        $o[27],
                    ],
                ],
                '_unmerged' => [
                    3 => [
                        $o[6],
                    ],
                ],
                'required' => [
                    3 => true,
                ],
                'properties' => [
                    6 => [
                        $o[9],
                        $o[12],
                        $o[15],
                        $o[18],
                        $o[21],
                        $o[24],
                    ],
                ],
                'type' => [
                    6 => 'object',
                    9 => 'string',
                    12 => 'string',
                    15 => 'string',
                    18 => 'string',
                    21 => 'string',
                    24 => 'string',
                ],
                'format' => [
                    9 => 'date-time',
                    12 => 'date-time',
                    18 => 'date-time',
                    21 => 'date-time',
                ],
                'example' => [
                    9 => '2023-11-04T10:00:00+00:00',
                    12 => '2023-11-04T10:00:00+00:00',
                    18 => '2023-11-04T09:00:00+00:00',
                    21 => '2023-11-04T08:00:00+00:00',
                ],
                'property' => [
                    9 => 'minimalTimeSlot',
                    12 => 'maximalTimeSlot',
                    15 => 'workDays',
                    18 => 'workHoursStart',
                    21 => 'workHoursEnd',
                    24 => 'timeBetweenAppointments',
                ],
                'name' => [
                    27 => 'Plannings',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
            $o[27],
        ],
        []
    );
},
33 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                ],
                'response' => [
                    204,
                ],
                'description' => [
                    'No content',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                ],
                'name' => [
                    3 => 'Plannings',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
        ],
        []
    );
},
34 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                ],
                'response' => [
                    200,
                ],
                'description' => [
                    'Ok',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                ],
                'name' => [
                    3 => 'Schedules',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
        ],
        []
    );
},
35 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                ],
                'response' => [
                    200,
                ],
                'description' => [
                    'OK',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                ],
                'name' => [
                    3 => 'Schedules',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
        ],
        []
    );
},
36 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                    6 => $o[7],
                    9 => $o[10],
                    12 => $o[13],
                    15 => $o[16],
                    18 => $o[19],
                    21 => $o[22],
                ],
                'response' => [
                    201,
                ],
                'description' => [
                    'Created',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                    10 => $o[11],
                    13 => $o[14],
                    16 => $o[17],
                    19 => $o[20],
                    22 => $o[23],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    7 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    10 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    13 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    16 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    19 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    22 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                    7 => 1481,
                    10 => 1481,
                    13 => 1481,
                    16 => 1481,
                    19 => 1481,
                    22 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                    7 => 'instantiateAnnotiation',
                    10 => 'instantiateAnnotiation',
                    13 => 'instantiateAnnotiation',
                    16 => 'instantiateAnnotiation',
                    19 => 'instantiateAnnotiation',
                    22 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                    7 => 'DocParser',
                    10 => 'DocParser',
                    13 => 'DocParser',
                    16 => 'DocParser',
                    19 => 'DocParser',
                    22 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    16 => 'Doctrine\\Common\\Annotations',
                    19 => 'Doctrine\\Common\\Annotations',
                    22 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                    7 => [
                        $o[6],
                    ],
                    10 => [
                        $o[9],
                    ],
                    13 => [
                        $o[12],
                    ],
                    16 => [
                        $o[15],
                    ],
                    19 => [
                        $o[18],
                    ],
                    22 => [
                        $o[21],
                    ],
                ],
                '_unmerged' => [
                    3 => [
                        $o[6],
                    ],
                ],
                'required' => [
                    3 => true,
                ],
                'properties' => [
                    6 => [
                        $o[9],
                        $o[12],
                        $o[15],
                        $o[18],
                    ],
                ],
                'type' => [
                    6 => 'object',
                    9 => 'string',
                    12 => 'integer',
                    15 => 'string',
                    18 => 'string',
                ],
                'format' => [
                    9 => 'date-time',
                    15 => 'date-time',
                    18 => 'date-time',
                ],
                'example' => [
                    9 => '2023-12-28T10:00:00+00:00',
                    15 => '2023-12-28T10:00:00+00:00',
                    18 => '2023-12-28T10:00:00+00:00',
                ],
                'property' => [
                    9 => 'weekNumber',
                    12 => 'yearDate',
                    15 => 'hourStartDate',
                    18 => 'hourEndDate',
                ],
                'name' => [
                    21 => 'Schedules',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
            $o[21],
        ],
        []
    );
},
37 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                    6 => $o[7],
                    9 => $o[10],
                    12 => $o[13],
                    15 => $o[16],
                    18 => $o[19],
                    21 => $o[22],
                ],
                'response' => [
                    202,
                ],
                'description' => [
                    'Accepted',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                    10 => $o[11],
                    13 => $o[14],
                    16 => $o[17],
                    19 => $o[20],
                    22 => $o[23],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    7 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    10 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    13 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    16 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    19 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    22 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                    7 => 1481,
                    10 => 1481,
                    13 => 1481,
                    16 => 1481,
                    19 => 1481,
                    22 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                    7 => 'instantiateAnnotiation',
                    10 => 'instantiateAnnotiation',
                    13 => 'instantiateAnnotiation',
                    16 => 'instantiateAnnotiation',
                    19 => 'instantiateAnnotiation',
                    22 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                    7 => 'DocParser',
                    10 => 'DocParser',
                    13 => 'DocParser',
                    16 => 'DocParser',
                    19 => 'DocParser',
                    22 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    16 => 'Doctrine\\Common\\Annotations',
                    19 => 'Doctrine\\Common\\Annotations',
                    22 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                    7 => [
                        $o[6],
                    ],
                    10 => [
                        $o[9],
                    ],
                    13 => [
                        $o[12],
                    ],
                    16 => [
                        $o[15],
                    ],
                    19 => [
                        $o[18],
                    ],
                    22 => [
                        $o[21],
                    ],
                ],
                '_unmerged' => [
                    3 => [
                        $o[6],
                    ],
                ],
                'required' => [
                    3 => true,
                ],
                'properties' => [
                    6 => [
                        $o[9],
                        $o[12],
                        $o[15],
                        $o[18],
                    ],
                ],
                'type' => [
                    6 => 'object',
                    9 => 'string',
                    12 => 'integer',
                    15 => 'string',
                    18 => 'string',
                ],
                'format' => [
                    9 => 'date-time',
                    15 => 'date-time',
                    18 => 'date-time',
                ],
                'example' => [
                    9 => '2023-12-28T10:00:00+00:00',
                    15 => '2023-12-28T10:00:00+00:00',
                    18 => '2023-12-28T10:00:00+00:00',
                ],
                'property' => [
                    9 => 'weekNumber',
                    12 => 'yearDate',
                    15 => 'hourStartDate',
                    18 => 'hourEndDate',
                ],
                'name' => [
                    21 => 'Schedules',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
            $o[21],
        ],
        []
    );
},
38 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                ],
                'response' => [
                    204,
                ],
                'description' => [
                    'No content',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                ],
                'name' => [
                    3 => 'Schedules',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
        ],
        []
    );
},
39 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                ],
                'response' => [
                    200,
                ],
                'description' => [
                    'Ok',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                ],
                'name' => [
                    3 => 'Transactions',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
        ],
        []
    );
},
40 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                ],
                'response' => [
                    200,
                ],
                'description' => [
                    'OK',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                ],
                'name' => [
                    3 => 'Users',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
        ],
        []
    );
},
41 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Items'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Items')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                    6 => $o[7],
                    9 => $o[10],
                    12 => $o[13],
                    15 => $o[16],
                    18 => $o[19],
                    21 => $o[22],
                    24 => $o[25],
                    27 => $o[28],
                    30 => $o[31],
                ],
                'response' => [
                    201,
                ],
                'description' => [
                    'Created',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                    10 => $o[11],
                    13 => $o[14],
                    16 => $o[17],
                    19 => $o[20],
                    22 => $o[23],
                    25 => $o[26],
                    28 => $o[29],
                    31 => $o[32],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    7 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    10 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    13 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    16 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    19 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    22 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    25 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    28 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    31 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                    7 => 1481,
                    10 => 1481,
                    13 => 1481,
                    16 => 1481,
                    19 => 1481,
                    22 => 1481,
                    25 => 1481,
                    28 => 1481,
                    31 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                    7 => 'instantiateAnnotiation',
                    10 => 'instantiateAnnotiation',
                    13 => 'instantiateAnnotiation',
                    16 => 'instantiateAnnotiation',
                    19 => 'instantiateAnnotiation',
                    22 => 'instantiateAnnotiation',
                    25 => 'instantiateAnnotiation',
                    28 => 'instantiateAnnotiation',
                    31 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                    7 => 'DocParser',
                    10 => 'DocParser',
                    13 => 'DocParser',
                    16 => 'DocParser',
                    19 => 'DocParser',
                    22 => 'DocParser',
                    25 => 'DocParser',
                    28 => 'DocParser',
                    31 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    16 => 'Doctrine\\Common\\Annotations',
                    19 => 'Doctrine\\Common\\Annotations',
                    22 => 'Doctrine\\Common\\Annotations',
                    25 => 'Doctrine\\Common\\Annotations',
                    28 => 'Doctrine\\Common\\Annotations',
                    31 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                    7 => [
                        $o[6],
                    ],
                    10 => [
                        $o[9],
                    ],
                    13 => [
                        $o[12],
                    ],
                    16 => [
                        $o[15],
                    ],
                    19 => [
                        $o[18],
                    ],
                    22 => [
                        $o[21],
                    ],
                    25 => [
                        $o[24],
                    ],
                    28 => [
                        $o[27],
                    ],
                    31 => [
                        $o[30],
                    ],
                ],
                '_unmerged' => [
                    3 => [
                        $o[6],
                    ],
                ],
                'required' => [
                    3 => true,
                ],
                'properties' => [
                    6 => [
                        $o[9],
                        $o[12],
                        $o[15],
                        $o[18],
                        $o[21],
                        $o[27],
                    ],
                ],
                'type' => [
                    6 => 'object',
                    9 => 'string',
                    12 => 'string',
                    15 => 'string',
                    18 => 'string',
                    21 => 'array',
                    24 => 'string',
                    27 => 'string',
                ],
                'property' => [
                    9 => 'lastname',
                    12 => 'firstname',
                    15 => 'datebirth',
                    18 => 'email',
                    21 => 'roles',
                    27 => 'password',
                ],
                'format' => [
                    15 => 'date-time',
                    18 => 'email',
                ],
                'example' => [
                    15 => '2023-11-04T00:00:00+00:00',
                    21 => [
                        'ROLE_COACH or ROLE_PATIENT',
                    ],
                ],
                'items' => [
                    21 => $o[24],
                ],
                'enum' => [
                    24 => [
                        'ROLE_COACH',
                        'ROLE_PATIENT',
                        'ROLE_ADMIN',
                    ],
                ],
                'name' => [
                    30 => 'Users',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
            $o[30],
        ],
        []
    );
},
42 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone $p['OpenApi\\Annotations\\Property'],
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                    6 => $o[7],
                    9 => $o[10],
                    12 => $o[13],
                    15 => $o[16],
                ],
                'response' => [
                    202,
                ],
                'description' => [
                    'Accepted',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                    7 => $o[8],
                    10 => $o[11],
                    13 => $o[14],
                    16 => $o[17],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    7 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    10 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    13 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    16 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                    7 => 1481,
                    10 => 1481,
                    13 => 1481,
                    16 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                    7 => 'instantiateAnnotiation',
                    10 => 'instantiateAnnotiation',
                    13 => 'instantiateAnnotiation',
                    16 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                    7 => 'DocParser',
                    10 => 'DocParser',
                    13 => 'DocParser',
                    16 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                    7 => 'Doctrine\\Common\\Annotations',
                    10 => 'Doctrine\\Common\\Annotations',
                    13 => 'Doctrine\\Common\\Annotations',
                    16 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                    7 => [
                        $o[6],
                    ],
                    10 => [
                        $o[9],
                    ],
                    13 => [
                        $o[12],
                    ],
                    16 => [
                        $o[15],
                    ],
                ],
                '_unmerged' => [
                    3 => [
                        $o[6],
                    ],
                ],
                'required' => [
                    3 => true,
                ],
                'properties' => [
                    6 => [
                        $o[9],
                        $o[12],
                    ],
                ],
                'type' => [
                    6 => 'object',
                    9 => 'string',
                    12 => 'string',
                ],
                'format' => [
                    9 => 'email',
                ],
                'property' => [
                    9 => 'email',
                    12 => 'password',
                ],
                'name' => [
                    15 => 'Users',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
            $o[15],
        ],
        []
    );
},
43 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
            clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
            clone ($p['OpenApi\\Loggers\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Loggers\\DefaultLogger')),
            clone ($p['OpenApi\\Annotations\\Tag'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Tag')),
            clone $p['OpenApi\\Context'],
            clone $p['OpenApi\\Loggers\\DefaultLogger'],
        ],
        null,
        [
            'stdClass' => [
                '_context' => [
                    $o[1],
                    3 => $o[4],
                ],
                'response' => [
                    204,
                ],
                'description' => [
                    'No content',
                ],
                'logger' => [
                    1 => $o[2],
                    4 => $o[5],
                ],
                'filename' => [
                    1 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                    4 => 'C:\\Users\\cmptp\\Desktop\\alzm_docker\\alzm_api\\vendor\\doctrine\\annotations\\lib\\Doctrine\\Common\\Annotations\\DocParser.php',
                ],
                'line' => [
                    1 => 1481,
                    4 => 1481,
                ],
                'method' => [
                    1 => 'instantiateAnnotiation',
                    4 => 'instantiateAnnotiation',
                ],
                'class' => [
                    1 => 'DocParser',
                    4 => 'DocParser',
                ],
                'namespace' => [
                    1 => 'Doctrine\\Common\\Annotations',
                    4 => 'Doctrine\\Common\\Annotations',
                ],
                'annotations' => [
                    1 => [
                        $o[0],
                    ],
                    4 => [
                        $o[3],
                    ],
                ],
                'name' => [
                    3 => 'Users',
                ],
            ],
        ],
        [
            $o[0],
            $o[3],
        ],
        []
    );
},
44 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'admin',
                ],
                'repositoryClass' => [
                    1 => 'App\\Repository\\AdminRepository',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
45 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\OneToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumns'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumns')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'strategy' => [
                    1 => 'NONE',
                ],
                'targetEntity' => [
                    2 => 'AppUser',
                ],
                'cascade' => [
                    2 => [
                        'persist',
                    ],
                ],
                'value' => [
                    3 => [
                        $o[4],
                    ],
                ],
                'name' => [
                    4 => 'id_user',
                ],
                'referencedColumnName' => [
                    4 => 'id_user',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
46 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'advantage',
                ],
                'repositoryClass' => [
                    1 => 'App\\Repository\\AdvantageRepository',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
47 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\SequenceGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\SequenceGenerator')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'id_advantage',
                ],
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'strategy' => [
                    2 => 'SEQUENCE',
                ],
                'sequenceName' => [
                    3 => 'advantage_id_advantage_seq',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    4 => [
                        'plans',
                        'advantages',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
        ],
        []
    );
},
48 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'description',
                ],
                'type' => [
                    'text',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
                'message' => [
                    1 => 'Field DESCRIPTION cannot be blank',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    2 => [
                        'plans',
                        'advantages',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
49 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\ManyToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToMany')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Plan',
                ],
                'mappedBy' => [
                    'idAdvantage',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
50 => 1701744198,
51 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'app_user',
                ],
                'repositoryClass' => [
                    1 => 'App\\Repository\\AppUserRepository',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
52 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\SequenceGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\SequenceGenerator')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'id_user',
                ],
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'strategy' => [
                    2 => 'SEQUENCE',
                ],
                'sequenceName' => [
                    3 => 'app_user_id_user_seq',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    4 => [
                        'patients',
                        'coach',
                        'transaction',
                        'course',
                        'planning',
                        'availability',
                        'appointment',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
        ],
        []
    );
},
53 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'lastname',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    50,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
                'message' => [
                    1 => 'Field LASTNAME cannot be blank',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    2 => [
                        'patients',
                        'coach',
                        'transaction',
                        'course',
                        'planning',
                        'availability',
                        'appointment',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
54 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'firstname',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    50,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
                'message' => [
                    1 => 'Field FIRSTNAME cannot be blank',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    2 => [
                        'patients',
                        'coach',
                        'transaction',
                        'course',
                        'planning',
                        'availability',
                        'appointment',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
55 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'datebirth',
                ],
                'type' => [
                    'date',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
                'message' => [
                    1 => 'Field DATEBIRTH cannot be blank',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    2 => [
                        'patients',
                        'coach',
                        'transaction',
                        'course',
                        'planning',
                        'availability',
                        'appointment',
                        'appointment',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
56 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Email'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Email')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'email',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    50,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                    [
                        'Default',
                    ],
                ],
                'message' => [
                    1 => ' The e-mail adress format is incorrect',
                    'Field EMAIL cannot be blank',
                ],
                'mode' => [
                    1 => 'strict',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    3 => [
                        'patients',
                        'coach',
                        'transaction',
                        'course',
                        'planning',
                        'availability',
                        'appointment',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
57 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'password',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    1000,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
                'message' => [
                    1 => 'Field PASSWORD cannot be blank',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
58 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'access_token',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    1000,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
59 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'date_registration',
                ],
                'type' => [
                    'date',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'patients',
                        'coach',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
60 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'roles',
                ],
                'type' => [
                    'json',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
                'message' => [
                    1 => 'Field ROLES cannot be blank',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
61 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone $p['Doctrine\\ORM\\Mapping\\Index'],
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'appointment',
                    'IDX_FE38F844D1DC2CFC',
                    'IDX_FE38F844C4477E9B',
                    'IDX_FE38F844AE3FD6E',
                ],
                'indexes' => [
                    [
                        $o[1],
                        $o[2],
                        $o[3],
                    ],
                ],
                'columns' => [
                    1 => [
                        'id_coach',
                    ],
                    [
                        'id_patient',
                    ],
                    [
                        'id_schedule',
                    ],
                ],
                'repositoryClass' => [
                    4 => 'App\\Repository\\AppointmentRepository',
                ],
            ],
        ],
        [
            $o[0],
            $o[4],
        ],
        []
    );
},
62 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone $p['Doctrine\\ORM\\Mapping\\Column'],
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    1 => 'integer',
                    3 => 'integer',
                ],
                'precision' => [
                    1 => null,
                    3 => null,
                ],
                'scale' => [
                    1 => null,
                    3 => null,
                ],
                'strategy' => [
                    2 => 'SEQUENCE',
                ],
                'name' => [
                    3 => 'id_appointment',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    4 => [
                        'appointment',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
        ],
        []
    );
},
63 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumns'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumns')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\SerializedName')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Coach',
                ],
                'value' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'name' => [
                    2 => 'id_coach',
                ],
                'referencedColumnName' => [
                    2 => 'id_user',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    3 => [
                        'appointment',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\SerializedName' => [
                'serializedName' => [
                    4 => 'coach',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[3],
            $o[4],
        ],
        []
    );
},
64 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumns'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumns')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\SerializedName')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Patient',
                ],
                'value' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'name' => [
                    2 => 'id_patient',
                ],
                'referencedColumnName' => [
                    2 => 'id_user',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    3 => [
                        'appointment',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\SerializedName' => [
                'serializedName' => [
                    4 => 'patient',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[3],
            $o[4],
        ],
        []
    );
},
65 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumns'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumns')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\SerializedName')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Schedule',
                ],
                'value' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'name' => [
                    2 => 'id_schedule',
                ],
                'referencedColumnName' => [
                    2 => 'id_schedule',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    3 => [
                        'appointment',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\SerializedName' => [
                'serializedName' => [
                    4 => 'schedule',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[3],
            $o[4],
        ],
        []
    );
},
66 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'availability',
                    'IDX_3FB7A2BF6B3CA4B',
                ],
                'indexes' => [
                    [
                        $o[1],
                    ],
                ],
                'columns' => [
                    1 => [
                        'id_user',
                    ],
                ],
                'repositoryClass' => [
                    2 => 'App\\Repository\\AvailabilityRepository',
                ],
            ],
        ],
        [
            $o[0],
            $o[2],
        ],
        []
    );
},
67 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\SequenceGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\SequenceGenerator')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'id_availability',
                ],
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'strategy' => [
                    2 => 'SEQUENCE',
                ],
                'sequenceName' => [
                    3 => 'availability_id_availability_seq',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    4 => [
                        'availability',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
        ],
        []
    );
},
68 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'date_availability',
                ],
                'type' => [
                    'date',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'availability',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
69 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'hour_start_slot',
                ],
                'type' => [
                    'time',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'availability',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
70 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'hour_end_slot',
                ],
                'type' => [
                    'time',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'availability',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
71 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumns'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumns')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\SerializedName')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Coach',
                ],
                'value' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'name' => [
                    2 => 'id_user',
                ],
                'referencedColumnName' => [
                    2 => 'id_user',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    3 => [
                        'availability',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\SerializedName' => [
                'serializedName' => [
                    4 => 'coach',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[3],
            $o[4],
        ],
        []
    );
},
72 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'coach',
                ],
                'repositoryClass' => [
                    1 => 'App\\Repository\\CoachRepository',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
73 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\OneToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumns'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumns')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\SerializedName')),
        ],
        null,
        [
            'stdClass' => [
                'strategy' => [
                    1 => 'NONE',
                ],
                'targetEntity' => [
                    2 => 'AppUser',
                ],
                'value' => [
                    3 => [
                        $o[4],
                    ],
                ],
                'name' => [
                    4 => 'id_user',
                ],
                'referencedColumnName' => [
                    4 => 'id_user',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    5 => [
                        'coach',
                        'course',
                        'planning',
                        'availability',
                        'appointment',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\SerializedName' => [
                'serializedName' => [
                    6 => 'coachInformation',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[5],
            $o[6],
        ],
        []
    );
},
74 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'isconfirmed',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'coach',
                        'course',
                        'planning',
                        'availability',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
75 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'hourly_rate',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    8,
                ],
                'scale' => [
                    2,
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'coach',
                        'course',
                        'planning',
                        'availability',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
76 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToMany')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinTable'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinTable')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumn'],
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\SerializedName')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Course',
                ],
                'inversedBy' => [
                    'idUser',
                ],
                'name' => [
                    1 => 'assign',
                    'id_user',
                    'id_course',
                ],
                'joinColumns' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'inverseJoinColumns' => [
                    1 => [
                        $o[3],
                    ],
                ],
                'referencedColumnName' => [
                    2 => 'id_user',
                    'id_course',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    4 => [
                        'coach',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\SerializedName' => [
                'serializedName' => [
                    5 => 'course',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
            $o[5],
        ],
        []
    );
},
77 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'course',
                ],
                'repositoryClass' => [
                    1 => 'App\\Repository\\CourseRepository',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
78 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\SequenceGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\SequenceGenerator')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'id_course',
                ],
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'strategy' => [
                    2 => 'SEQUENCE',
                ],
                'sequenceName' => [
                    3 => 'course_id_course_seq',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    4 => [
                        'coach',
                        'course',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
        ],
        []
    );
},
79 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'name',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    50,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'coach',
                        'course',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
80 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'description',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    50,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'coach',
                        'course',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
81 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'duration',
                ],
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'coach',
                        'course',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
82 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'cost',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    15,
                ],
                'scale' => [
                    2,
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'coach',
                        'course',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
83 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToMany')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\SerializedName')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Coach',
                ],
                'mappedBy' => [
                    'idCourse',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'course',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\SerializedName' => [
                'serializedName' => [
                    2 => 'coach',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
84 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'files',
                ],
                'repositoryClass' => [
                    1 => 'App\\Repository\\FilesRepository',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
85 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\SequenceGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\SequenceGenerator')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'id_files',
                ],
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'strategy' => [
                    2 => 'SEQUENCE',
                ],
                'sequenceName' => [
                    3 => 'files_id_files_seq',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    4 => [
                        'plans',
                        'resources',
                        'files',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
        ],
        []
    );
},
86 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'link',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    50,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
                'message' => [
                    1 => 'Field LINK cannot be blank',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    2 => [
                        'plans',
                        'resources',
                        'files',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
87 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'type',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    3,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
                'message' => [
                    1 => 'Field TYPE cannot be blank',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    2 => [
                        'plans',
                        'resources',
                        'files',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
88 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\ManyToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToMany')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Resources',
                ],
                'mappedBy' => [
                    'idFiles',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
89 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'patient',
                ],
                'repositoryClass' => [
                    1 => 'App\\Repository\\PatientRepository',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
90 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\OneToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumns'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumns')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\SerializedName')),
        ],
        null,
        [
            'stdClass' => [
                'strategy' => [
                    1 => 'NONE',
                ],
                'targetEntity' => [
                    2 => 'AppUser',
                ],
                'value' => [
                    3 => [
                        $o[4],
                    ],
                ],
                'name' => [
                    4 => 'id_user',
                ],
                'referencedColumnName' => [
                    4 => 'id_user',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    5 => [
                        'patients',
                        'transaction',
                        'appointment',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\SerializedName' => [
                'serializedName' => [
                    6 => 'patientInformation',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[5],
            $o[6],
        ],
        []
    );
},
91 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'sold',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    15,
                ],
                'scale' => [
                    2,
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'patients',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
92 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToMany')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinTable'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinTable')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumn'],
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\SerializedName')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Plan',
                ],
                'inversedBy' => [
                    'idUser',
                ],
                'name' => [
                    1 => 'subscribe',
                    'id_user',
                    'id_plan',
                ],
                'joinColumns' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'inverseJoinColumns' => [
                    1 => [
                        $o[3],
                    ],
                ],
                'referencedColumnName' => [
                    2 => 'id_user',
                    'id_plan',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    4 => [
                        'patients',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\SerializedName' => [
                'serializedName' => [
                    5 => 'planSubscribe',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
            $o[5],
        ],
        []
    );
},
93 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'plan',
                ],
                'repositoryClass' => [
                    1 => 'App\\Repository\\PlanRepository',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
94 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\SequenceGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\SequenceGenerator')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'id_plan',
                ],
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'strategy' => [
                    2 => 'SEQUENCE',
                ],
                'sequenceName' => [
                    3 => 'plan_id_plan_seq',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    4 => [
                        'plans',
                        'patients',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
        ],
        []
    );
},
95 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'name',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    50,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'plans',
                        'patients',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
96 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'description',
                ],
                'type' => [
                    'text',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'plans',
                        'patients',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
97 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'cost',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    15,
                ],
                'scale' => [
                    2,
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'plans',
                        'patients',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
98 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToMany')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinTable'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinTable')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumn'],
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\SerializedName')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Advantage',
                ],
                'inversedBy' => [
                    'idPlan',
                ],
                'name' => [
                    1 => 'plan_describe',
                    'id_plan',
                    'id_advantage',
                ],
                'joinColumns' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'inverseJoinColumns' => [
                    1 => [
                        $o[3],
                    ],
                ],
                'referencedColumnName' => [
                    2 => 'id_plan',
                    'id_advantage',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    4 => [
                        'plans',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\SerializedName' => [
                'serializedName' => [
                    5 => 'advantages',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
            $o[5],
        ],
        []
    );
},
99 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToMany')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinTable'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinTable')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumn'],
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\SerializedName')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Resources',
                ],
                'inversedBy' => [
                    'idPlan',
                ],
                'name' => [
                    1 => 'allocated',
                    'id_plan',
                    'id_resources',
                ],
                'joinColumns' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'inverseJoinColumns' => [
                    1 => [
                        $o[3],
                    ],
                ],
                'referencedColumnName' => [
                    2 => 'id_plan',
                    'id_resources',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    4 => [
                        'plans',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\SerializedName' => [
                'serializedName' => [
                    5 => 'resources',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
            $o[5],
        ],
        []
    );
},
100 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\ManyToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToMany')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Patient',
                ],
                'mappedBy' => [
                    'idPlan',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
101 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'planning_rules',
                    'IDX_183623A36B3CA4B',
                ],
                'indexes' => [
                    [
                        $o[1],
                    ],
                ],
                'columns' => [
                    1 => [
                        'id_user',
                    ],
                ],
                'repositoryClass' => [
                    2 => 'App\\Repository\\PlanningRulesRepository',
                ],
            ],
        ],
        [
            $o[0],
            $o[2],
        ],
        []
    );
},
102 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\SequenceGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\SequenceGenerator')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'id_planning_rules',
                ],
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'strategy' => [
                    2 => 'SEQUENCE',
                ],
                'sequenceName' => [
                    3 => 'planning_rules_id_planning_rules_seq',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    4 => [
                        'planning',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
        ],
        []
    );
},
103 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'minimal_time_slot',
                ],
                'type' => [
                    'time',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'planning',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
104 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'maximal_time_slot',
                ],
                'type' => [
                    'time',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'planning',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
105 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'work_days',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    7,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'planning',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
106 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'work_hours_start',
                ],
                'type' => [
                    'time',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'planning',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
107 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'work_hours_end',
                ],
                'type' => [
                    'time',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'planning',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
108 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'time_between_appointments',
                ],
                'type' => [
                    'string',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'planning',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
109 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumns'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumns')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\SerializedName')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Coach',
                ],
                'value' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'name' => [
                    2 => 'id_user',
                ],
                'referencedColumnName' => [
                    2 => 'id_user',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    3 => [
                        'planning',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\SerializedName' => [
                'serializedName' => [
                    4 => 'coach',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[3],
            $o[4],
        ],
        []
    );
},
110 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'resources',
                ],
                'repositoryClass' => [
                    1 => 'App\\Repository\\ResourcesRepository',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
111 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\SequenceGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\SequenceGenerator')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'id_resources',
                ],
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'strategy' => [
                    2 => 'SEQUENCE',
                ],
                'sequenceName' => [
                    3 => 'resources_id_resources_seq',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    4 => [
                        'plans',
                        'resources',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
        ],
        []
    );
},
112 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToMany')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinTable'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinTable')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumn'],
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\SerializedName')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Text',
                ],
                'inversedBy' => [
                    'idResources',
                ],
                'name' => [
                    1 => 'compose',
                    'id_resources',
                    'id_text',
                ],
                'joinColumns' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'inverseJoinColumns' => [
                    1 => [
                        $o[3],
                    ],
                ],
                'referencedColumnName' => [
                    2 => 'id_resources',
                    'id_text',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    4 => [
                        'plans',
                        'resources',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\SerializedName' => [
                'serializedName' => [
                    5 => 'text',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
            $o[5],
        ],
        []
    );
},
113 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToMany')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinTable'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinTable')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumn'],
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\SerializedName')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Files',
                ],
                'inversedBy' => [
                    'idResources',
                ],
                'name' => [
                    1 => 'content',
                    'id_resources',
                    'id_files',
                ],
                'joinColumns' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'inverseJoinColumns' => [
                    1 => [
                        $o[3],
                    ],
                ],
                'referencedColumnName' => [
                    2 => 'id_resources',
                    'id_files',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    4 => [
                        'plans',
                        'resources',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\SerializedName' => [
                'serializedName' => [
                    5 => 'files',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[4],
            $o[5],
        ],
        []
    );
},
114 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\ManyToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToMany')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Plan',
                ],
                'mappedBy' => [
                    'idResources',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
115 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'schedule',
                ],
                'repositoryClass' => [
                    1 => 'App\\Repository\\ScheduleRepository',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
116 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\SequenceGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\SequenceGenerator')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'id_schedule',
                ],
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'strategy' => [
                    2 => 'SEQUENCE',
                ],
                'sequenceName' => [
                    3 => 'schedule_id_schedule_seq',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    4 => [
                        'appointment',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
        ],
        []
    );
},
117 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'week_number',
                ],
                'type' => [
                    'date',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
                'message' => [
                    1 => 'Field weekNumber cannot be blank',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    2 => [
                        'appointment',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
118 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'year_date',
                ],
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
                'message' => [
                    1 => 'Field yearDate cannot be blank',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    2 => [
                        'appointment',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
119 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'hour_start_date',
                ],
                'type' => [
                    'time',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
                'message' => [
                    1 => 'Field hourStarDate cannot be blank',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    2 => [
                        'appointment',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
120 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'hour_end_date',
                ],
                'type' => [
                    'time',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
                'message' => [
                    1 => 'Field hourEndDate cannot be blank',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    2 => [
                        'appointment',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
121 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'text',
                ],
                'repositoryClass' => [
                    1 => 'App\\Repository\\TextRepository',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
122 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\SequenceGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\SequenceGenerator')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'id_text',
                ],
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'strategy' => [
                    2 => 'SEQUENCE',
                ],
                'sequenceName' => [
                    3 => 'text_id_text_seq',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    4 => [
                        'plans',
                        'resources',
                        'text',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
        ],
        []
    );
},
123 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'text',
                ],
                'type' => [
                    'text',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
                'message' => [
                    1 => 'Field TEXT cannot be blank',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    2 => [
                        'plans',
                        'resources',
                        'text',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
124 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\ManyToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToMany')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Resources',
                ],
                'mappedBy' => [
                    'idText',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
125 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'transaction',
                    'IDX_723705D16B3CA4B',
                ],
                'indexes' => [
                    [
                        $o[1],
                    ],
                ],
                'columns' => [
                    1 => [
                        'id_user',
                    ],
                ],
                'repositoryClass' => [
                    2 => 'App\\Repository\\TransactionRepository',
                ],
            ],
        ],
        [
            $o[0],
            $o[2],
        ],
        []
    );
},
126 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\SequenceGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\SequenceGenerator')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'id_transaction',
                ],
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'strategy' => [
                    2 => 'SEQUENCE',
                ],
                'sequenceName' => [
                    3 => 'transaction_id_transaction_seq',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    4 => [
                        'transaction',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
        ],
        []
    );
},
127 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'date_transaction',
                ],
                'type' => [
                    'datetime',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'transaction',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
128 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'amount',
                ],
                'type' => [
                    'decimal',
                ],
                'precision' => [
                    15,
                ],
                'scale' => [
                    2,
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'transaction',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
129 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'payment_method',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    50,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'transaction',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
130 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumns'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumns')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\SerializedName'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\SerializedName')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'Patient',
                ],
                'value' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'name' => [
                    2 => 'id_user',
                ],
                'referencedColumnName' => [
                    2 => 'id_user',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    3 => [
                        'transaction',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\SerializedName' => [
                'serializedName' => [
                    4 => 'patient',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[3],
            $o[4],
        ],
        []
    );
},

]];
